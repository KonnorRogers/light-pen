{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/@shoelace-style+shoelace@2.7.0/node_modules/@shoelace-style/shoelace/dist/chunks/chunk.RK73WSZS.js"],
  "sourcesContent": ["// src/internal/offset.ts\nfunction getOffset(element, parent) {\n  return {\n    top: Math.round(element.getBoundingClientRect().top - parent.getBoundingClientRect().top),\n    left: Math.round(element.getBoundingClientRect().left - parent.getBoundingClientRect().left)\n  };\n}\n\n// src/internal/scroll.ts\nvar locks = /* @__PURE__ */ new Set();\nfunction getScrollbarWidth() {\n  const documentWidth = document.documentElement.clientWidth;\n  return Math.abs(window.innerWidth - documentWidth);\n}\nfunction lockBodyScrolling(lockingEl) {\n  locks.add(lockingEl);\n  if (!document.body.classList.contains(\"sl-scroll-lock\")) {\n    const scrollbarWidth = getScrollbarWidth();\n    document.body.classList.add(\"sl-scroll-lock\");\n    document.body.style.setProperty(\"--sl-scroll-lock-size\", `${scrollbarWidth}px`);\n  }\n}\nfunction unlockBodyScrolling(lockingEl) {\n  locks.delete(lockingEl);\n  if (locks.size === 0) {\n    document.body.classList.remove(\"sl-scroll-lock\");\n    document.body.style.removeProperty(\"--sl-scroll-lock-size\");\n  }\n}\nfunction scrollIntoView(element, container, direction = \"vertical\", behavior = \"smooth\") {\n  const offset = getOffset(element, container);\n  const offsetTop = offset.top + container.scrollTop;\n  const offsetLeft = offset.left + container.scrollLeft;\n  const minX = container.scrollLeft;\n  const maxX = container.scrollLeft + container.offsetWidth;\n  const minY = container.scrollTop;\n  const maxY = container.scrollTop + container.offsetHeight;\n  if (direction === \"horizontal\" || direction === \"both\") {\n    if (offsetLeft < minX) {\n      container.scrollTo({ left: offsetLeft, behavior });\n    } else if (offsetLeft + element.clientWidth > maxX) {\n      container.scrollTo({ left: offsetLeft - container.offsetWidth + element.clientWidth, behavior });\n    }\n  }\n  if (direction === \"vertical\" || direction === \"both\") {\n    if (offsetTop < minY) {\n      container.scrollTo({ top: offsetTop, behavior });\n    } else if (offsetTop + element.clientHeight > maxY) {\n      container.scrollTo({ top: offsetTop - container.offsetHeight + element.clientHeight, behavior });\n    }\n  }\n}\n\nexport {\n  lockBodyScrolling,\n  unlockBodyScrolling,\n  scrollIntoView\n};\n"],
  "mappings": "AACA,SAASA,EAAUC,EAASC,EAAQ,CAClC,MAAO,CACL,IAAK,KAAK,MAAMD,EAAQ,sBAAsB,EAAE,IAAMC,EAAO,sBAAsB,EAAE,GAAG,EACxF,KAAM,KAAK,MAAMD,EAAQ,sBAAsB,EAAE,KAAOC,EAAO,sBAAsB,EAAE,IAAI,CAC7F,CACF,CAGA,IAAIC,EAAwB,IAAI,IAChC,SAASC,GAAoB,CAC3B,IAAMC,EAAgB,SAAS,gBAAgB,YAC/C,OAAO,KAAK,IAAI,OAAO,WAAaA,CAAa,CACnD,CACA,SAASC,EAAkBC,EAAW,CAEpC,GADAJ,EAAM,IAAII,CAAS,EACf,CAAC,SAAS,KAAK,UAAU,SAAS,gBAAgB,EAAG,CACvD,IAAMC,EAAiBJ,EAAkB,EACzC,SAAS,KAAK,UAAU,IAAI,gBAAgB,EAC5C,SAAS,KAAK,MAAM,YAAY,wBAAyB,GAAGI,CAAc,IAAI,CAChF,CACF,CACA,SAASC,EAAoBF,EAAW,CACtCJ,EAAM,OAAOI,CAAS,EAClBJ,EAAM,OAAS,IACjB,SAAS,KAAK,UAAU,OAAO,gBAAgB,EAC/C,SAAS,KAAK,MAAM,eAAe,uBAAuB,EAE9D,CACA,SAASO,EAAeT,EAASU,EAAWC,EAAY,WAAYC,EAAW,SAAU,CACvF,IAAMC,EAASd,EAAUC,EAASU,CAAS,EACrCI,EAAYD,EAAO,IAAMH,EAAU,UACnCK,EAAaF,EAAO,KAAOH,EAAU,WACrCM,EAAON,EAAU,WACjBO,EAAOP,EAAU,WAAaA,EAAU,YACxCQ,EAAOR,EAAU,UACjBS,EAAOT,EAAU,UAAYA,EAAU,cACzCC,IAAc,cAAgBA,IAAc,UAC1CI,EAAaC,EACfN,EAAU,SAAS,CAAE,KAAMK,EAAY,SAAAH,CAAS,CAAC,EACxCG,EAAaf,EAAQ,YAAciB,GAC5CP,EAAU,SAAS,CAAE,KAAMK,EAAaL,EAAU,YAAcV,EAAQ,YAAa,SAAAY,CAAS,CAAC,IAG/FD,IAAc,YAAcA,IAAc,UACxCG,EAAYI,EACdR,EAAU,SAAS,CAAE,IAAKI,EAAW,SAAAF,CAAS,CAAC,EACtCE,EAAYd,EAAQ,aAAemB,GAC5CT,EAAU,SAAS,CAAE,IAAKI,EAAYJ,EAAU,aAAeV,EAAQ,aAAc,SAAAY,CAAS,CAAC,EAGrG",
  "names": ["getOffset", "element", "parent", "locks", "getScrollbarWidth", "documentWidth", "lockBodyScrolling", "lockingEl", "scrollbarWidth", "unlockBodyScrolling", "scrollIntoView", "container", "direction", "behavior", "offset", "offsetTop", "offsetLeft", "minX", "maxX", "minY", "maxY"]
}
