{
  "version": 3,
  "sources": ["../../../../../node_modules/.pnpm/lit-html@3.2.0/node_modules/lit-html/src/directives/if-defined.ts", "../../../../../internal/clamp.js", "../../../../../internal/drag.js", "../../../../../internal/resize-icon.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {nothing} from '../lit-html.js';\n\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\nexport const ifDefined = <T>(value: T) => value ?? nothing;\n", "/**\n * @param {number} min\n * @param {number} curr\n * @param {number} max\n */\nexport function clamp(min, curr, max) {\n  if (curr < min) return min;\n  if (curr > max) return max;\n\n  return curr;\n}\n", "/**\n * @typedef {object} DragOptions\n * @property {(x: number, y: number) => void} onMove - Callback that runs as dragging occurs.\n * @property {() => void} onStop - Callback that runs when dragging stops.\n * @property {PointerEvent} initialEvent - When an initial event is passed, the first drag will be triggered immediately using the coordinates therein. This is useful when the drag is initiated by a mousedown/touchstart event but you want the initial \"click\" to activate a drag (e.g. resizePositioning a handle initially at the click target).\n */\n\n/**\n * @param {HTMLElement} container\n * @param {Partial<DragOptions>} [options]\n\n */\nexport function drag(container, options) {\n  /**\n   * @param {PointerEvent} pointerEvent\n   */\n  function move(pointerEvent) {\n    const dims = container.getBoundingClientRect();\n    const defaultView = container.ownerDocument.defaultView;\n    const offsetX = dims.left + (defaultView?.pageXOffset || 0);\n    const offsetY = dims.top + (defaultView?.pageYOffset || 0);\n    const x = pointerEvent.pageX - offsetX;\n    const y = pointerEvent.pageY - offsetY;\n\n    if (options?.onMove) {\n      options.onMove(x, y);\n    }\n  }\n\n  function stop() {\n    document.removeEventListener(\"pointermove\", move);\n    document.removeEventListener(\"pointerup\", stop);\n\n    if (options?.onStop) {\n      options.onStop();\n    }\n  }\n\n  document.addEventListener(\"pointermove\", move, { passive: true });\n  document.addEventListener(\"pointerup\", stop);\n\n  // If an initial event is set, trigger the first drag immediately\n  if (options?.initialEvent instanceof PointerEvent) {\n    move(options.initialEvent);\n  }\n}\n", "import { html } from \"lit\";\n\nexport const resizeIcon = html`<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"16\"\n  height=\"16\"\n  fill=\"currentColor\"\n  class=\"bi bi-grip-vertical\"\n  viewBox=\"0 0 16 16\"\n  part=\"svg\"\n>\n  <path\n    d=\"M7 2a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zM7 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zM7 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"\n  ></path>\n</svg>`;\n"],
  "mappings": "yFAcO,IAAMA,EAAgBC,GAAaA,GAASC,ECT5C,SAASC,EAAMC,EAAKC,EAAMC,EAAK,CACpC,OAAID,EAAOD,EAAYA,EACnBC,EAAOC,EAAYA,EAEhBD,CACT,CCEO,SAASE,EAAKC,EAAWC,EAAS,CAIvC,SAASC,EAAKC,EAAc,CAC1B,IAAMC,EAAOJ,EAAU,sBAAsB,EACvCK,EAAcL,EAAU,cAAc,YACtCM,EAAUF,EAAK,MAAQC,GAAa,aAAe,GACnDE,EAAUH,EAAK,KAAOC,GAAa,aAAe,GAClDG,EAAIL,EAAa,MAAQG,EACzBG,EAAIN,EAAa,MAAQI,EAE3BN,GAAS,QACXA,EAAQ,OAAOO,EAAGC,CAAC,CAEvB,CAEA,SAASC,GAAO,CACd,SAAS,oBAAoB,cAAeR,CAAI,EAChD,SAAS,oBAAoB,YAAaQ,CAAI,EAE1CT,GAAS,QACXA,EAAQ,OAAO,CAEnB,CAEA,SAAS,iBAAiB,cAAeC,EAAM,CAAE,QAAS,EAAK,CAAC,EAChE,SAAS,iBAAiB,YAAaQ,CAAI,EAGvCT,GAAS,wBAAwB,cACnCC,EAAKD,EAAQ,YAAY,CAE7B,CC3CO,IAAMU,EAAaC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": ["ifDefined", "value", "nothing", "clamp", "min", "curr", "max", "drag", "container", "options", "move", "pointerEvent", "dims", "defaultView", "offsetX", "offsetY", "x", "y", "stop", "resizeIcon", "ke"]
}
