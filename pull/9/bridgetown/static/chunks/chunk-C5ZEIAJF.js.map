{
  "version": 3,
  "sources": ["../../../../../internal/string-map.js", "../../../../../internal/debounce.js", "../../../../../exports/code-styles.js"],
  "sourcesContent": ["// @ts-check\n/**\n * @param {Record<string, unknown>} obj\n * @param {string} [spacer=\" \"]\n * @returns {string}\n */\nexport function stringMap (obj, spacer = \" \") {\n  let strings = []\n\n  for (const [key, val] of Object.entries(obj)) {\n    if (Boolean(val)) {\n      strings.push(key)\n    }\n  }\n\n  return strings.join(spacer)\n}\n", "// @ts-check\n/**\n * @template {(...args: any[]) => any} T\n * @param {T} callback\n * @param {number} wait\n */\nexport function debounce (callback, wait = 0) {\n  /**\n   * @type {number | null}\n   */\n  let timeoutId = null;\n\n  /**\n   * @param {any[]} args\n   */\n  return (...args) => {\n    if (timeoutId) {\n      window.clearTimeout(timeoutId);\n    }\n\n    timeoutId = window.setTimeout(() => {\n      callback.apply(null, args);\n    }, wait);\n  };\n}\n", "import { css } from \"lit\";\n\nexport const codeStyles = css`\n[part~=\"pre\"] {\n  padding: 1rem;\n  margin: 0;\n  overflow: auto;\n  /* This removes line wrapping */\n\tword-break: break-all;\n  white-space: pre;\n}\n\n:host([wrap=\"soft\"]) [part~=\"pre\"] {\n  /* this creates line-wrapping. */\n\tword-break: break-word;\n  white-space: pre-wrap;\n}\n\n.light-line {\n  display: inline-block;\n  width: 100%;\n}\n\n[part~=\"pre\"],\n[part~=\"code\"] {\n  line-height: 1.6;\n}\n\n\n[part~=\"pre\"],\n[part~=\"code\"] {\n\tcolor: #272727;\n\tbackground-color: #f7f7f7;\n}\n`\n"],
  "mappings": "iFAMO,SAASA,EAAWC,EAAKC,EAAS,IAAK,CAC5C,IAAIC,EAAU,CAAC,EAEf,OAAW,CAACC,EAAKC,CAAG,IAAK,OAAO,QAAQJ,CAAG,EAC7BI,GACVF,EAAQ,KAAKC,CAAG,EAIpB,OAAOD,EAAQ,KAAKD,CAAM,CAC5B,CCVO,SAASI,EAAUC,EAAUC,EAAO,EAAG,CAI5C,IAAIC,EAAY,KAKhB,MAAO,IAAIC,IAAS,CACdD,GACF,OAAO,aAAaA,CAAS,EAG/BA,EAAY,OAAO,WAAW,IAAM,CAClCF,EAAS,MAAM,KAAMG,CAAI,CAC3B,EAAGF,CAAI,CACT,CACF,CCtBO,IAAMG,EAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": ["stringMap", "obj", "spacer", "strings", "key", "val", "debounce", "callback", "wait", "timeoutId", "args", "codeStyles"]
}
