{
  "version": 3,
  "sources": ["../../../../frontend/javascript/defer.js"],
  "sourcesContent": ["import \"../styles/defer.css\"\n\n;(window.requestIdleCallback || window.setTimeout)(async () => {\n  const { BridgetownNinjaKeys } = await import(\"@konnorr/bridgetown-quick-search/ninja-keys.js\")\n\n  /** @type {import(\"konnors-ninja-keys\").INinjaAction[]} */\n  const staticData = [\n    {\n      id: \"theme-light\",\n      icon: \"<sl-icon name='sun'></sl-icon>\",\n      title: \"Light Mode\",\n      section: \"Theme\",\n      keywords: \"theme\",\n      handler () {\n        window.applyTheme(\"light\");\n        return {keepOpen: true}\n      }\n    },\n    {\n      id: \"theme-dark\",\n      icon: \"<sl-icon name='moon'></sl-icon>\",\n      title: \"Dark Mode\",\n      section: \"Theme\",\n      keywords: \"theme\",\n      handler () {\n        window.applyTheme(\"dark\");\n        return {keepOpen: true}\n      }\n    },\n    {\n      id: \"theme-system\",\n      icon: \"<sl-icon name='display'></sl-icon>\",\n      title: \"System\",\n      section: \"Theme\",\n      keywords: \"theme\",\n      handler () {\n        window.applyTheme(\"system\");\n        return {keepOpen: true}\n      }\n    },\n  ]\n\n  ;(class extends BridgetownNinjaKeys {\n    constructor (...args) {\n      super(...args)\n      this.staticData = staticData\n    }\n\n    createData() {\n      this.results = this.showResultsForQuery(this._search || \"*\").reverse()\n\n      this.results.forEach((result) => {\n        result.icon = `<sl-icon name=\"link-45deg\"></sl-icon>`\n      })\n\n      return this.staticData.concat(this.results)\n    }\n\n    transformResult (result) {\n      let { id, title, categories, url, content, collection } = result\n      if (url.endsWith(\".json\")) {\n        return\n      }\n      return {\n        id,\n        title,\n        section: collection.name,\n        href: url,\n        content\n      }\n    }\n\n    open () {\n      this.scrollTop = window.scrollY;\n      document.body.classList.add('fixed-body');\n      // Scroll the wrapper, rather than setting an offset\n      // via `top` or `transform`.\n      document.body.scroll(0, this.scrollTop);\n\n      this.nonModals.forEach((el) => {\n        el.setAttribute(\"inert\", \"\")\n      })\n      super.open()\n    }\n\n    close () {\n      document.body.classList.remove('fixed-body');\n      window.scrollTo(0, this.scrollTop);\n      super.close()\n      this.nonModals.forEach((el) => el.removeAttribute(\"inert\"))\n    }\n\n    get nonModals () {\n      return [...document.body.children].filter((el) => el.localName !== \"bridgetown-ninja-keys\")\n    }\n  }).define(\"bridgetown-ninja-keys\")\n})\n"],
  "mappings": "+DAEE,OAAO,qBAAuB,OAAO,YAAY,SAAY,CAC7D,GAAM,CAAE,oBAAAA,CAAoB,EAAI,KAAM,QAAO,4DAAgD,EAGvFC,EAAa,CACjB,CACE,GAAI,cACJ,KAAM,iCACN,MAAO,aACP,QAAS,QACT,SAAU,QACV,SAAW,CACT,cAAO,WAAW,OAAO,EAClB,CAAC,SAAU,EAAI,CACxB,CACF,EACA,CACE,GAAI,aACJ,KAAM,kCACN,MAAO,YACP,QAAS,QACT,SAAU,QACV,SAAW,CACT,cAAO,WAAW,MAAM,EACjB,CAAC,SAAU,EAAI,CACxB,CACF,EACA,CACE,GAAI,eACJ,KAAM,qCACN,MAAO,SACP,QAAS,QACT,SAAU,QACV,SAAW,CACT,cAAO,WAAW,QAAQ,EACnB,CAAC,SAAU,EAAI,CACxB,CACF,CACF,GAEE,cAAcD,CAAoB,CAClC,eAAgBE,EAAM,CACpB,MAAM,GAAGA,CAAI,EACb,KAAK,WAAaD,CACpB,CAEA,YAAa,CACX,YAAK,QAAU,KAAK,oBAAoB,KAAK,SAAW,GAAG,EAAE,QAAQ,EAErE,KAAK,QAAQ,QAASE,GAAW,CAC/BA,EAAO,KAAO,uCAChB,CAAC,EAEM,KAAK,WAAW,OAAO,KAAK,OAAO,CAC5C,CAEA,gBAAiBA,EAAQ,CACvB,GAAI,CAAE,GAAAC,EAAI,MAAAC,EAAO,WAAAC,EAAY,IAAAC,EAAK,QAAAC,EAAS,WAAAC,CAAW,EAAIN,EAC1D,GAAI,CAAAI,EAAI,SAAS,OAAO,EAGxB,MAAO,CACL,GAAAH,EACA,MAAAC,EACA,QAASI,EAAW,KACpB,KAAMF,EACN,QAAAC,CACF,CACF,CAEA,MAAQ,CACN,KAAK,UAAY,OAAO,QACxB,SAAS,KAAK,UAAU,IAAI,YAAY,EAGxC,SAAS,KAAK,OAAO,EAAG,KAAK,SAAS,EAEtC,KAAK,UAAU,QAASE,GAAO,CAC7BA,EAAG,aAAa,QAAS,EAAE,CAC7B,CAAC,EACD,MAAM,KAAK,CACb,CAEA,OAAS,CACP,SAAS,KAAK,UAAU,OAAO,YAAY,EAC3C,OAAO,SAAS,EAAG,KAAK,SAAS,EACjC,MAAM,MAAM,EACZ,KAAK,UAAU,QAASA,GAAOA,EAAG,gBAAgB,OAAO,CAAC,CAC5D,CAEA,IAAI,WAAa,CACf,MAAO,CAAC,GAAG,SAAS,KAAK,QAAQ,EAAE,OAAQA,GAAOA,EAAG,YAAc,uBAAuB,CAC5F,CACF,GAAG,OAAO,uBAAuB,CACnC,CAAC",
  "names": ["BridgetownNinjaKeys", "staticData", "args", "result", "id", "title", "categories", "url", "content", "collection", "el"]
}
