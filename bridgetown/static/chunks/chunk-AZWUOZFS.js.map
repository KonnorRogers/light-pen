{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/@shoelace-style+shoelace@2.20.0_@floating-ui+utils@0.2.9_@types+react@19.0.10/node_modules/@shoelace-style/shoelace/dist/chunks/chunk.OSU5LOVZ.js"],
  "sourcesContent": ["// src/internal/tabbable.ts\nvar computedStyleMap = /* @__PURE__ */ new WeakMap();\nfunction getCachedComputedStyle(el) {\n  let computedStyle = computedStyleMap.get(el);\n  if (!computedStyle) {\n    computedStyle = window.getComputedStyle(el, null);\n    computedStyleMap.set(el, computedStyle);\n  }\n  return computedStyle;\n}\nfunction isVisible(el) {\n  if (typeof el.checkVisibility === \"function\") {\n    return el.checkVisibility({ checkOpacity: false, checkVisibilityCSS: true });\n  }\n  const computedStyle = getCachedComputedStyle(el);\n  return computedStyle.visibility !== \"hidden\" && computedStyle.display !== \"none\";\n}\nfunction isOverflowingAndTabbable(el) {\n  const computedStyle = getCachedComputedStyle(el);\n  const { overflowY, overflowX } = computedStyle;\n  if (overflowY === \"scroll\" || overflowX === \"scroll\") {\n    return true;\n  }\n  if (overflowY !== \"auto\" || overflowX !== \"auto\") {\n    return false;\n  }\n  const isOverflowingY = el.scrollHeight > el.clientHeight;\n  if (isOverflowingY && overflowY === \"auto\") {\n    return true;\n  }\n  const isOverflowingX = el.scrollWidth > el.clientWidth;\n  if (isOverflowingX && overflowX === \"auto\") {\n    return true;\n  }\n  return false;\n}\nfunction isTabbable(el) {\n  const tag = el.tagName.toLowerCase();\n  const tabindex = Number(el.getAttribute(\"tabindex\"));\n  const hasTabindex = el.hasAttribute(\"tabindex\");\n  if (hasTabindex && (isNaN(tabindex) || tabindex <= -1)) {\n    return false;\n  }\n  if (el.hasAttribute(\"disabled\")) {\n    return false;\n  }\n  if (el.closest(\"[inert]\")) {\n    return false;\n  }\n  if (tag === \"input\" && el.getAttribute(\"type\") === \"radio\") {\n    const rootNode = el.getRootNode();\n    const findRadios = `input[type='radio'][name=\"${el.getAttribute(\"name\")}\"]`;\n    const firstChecked = rootNode.querySelector(`${findRadios}:checked`);\n    if (firstChecked) {\n      return firstChecked === el;\n    }\n    const firstRadio = rootNode.querySelector(findRadios);\n    return firstRadio === el;\n  }\n  if (!isVisible(el)) {\n    return false;\n  }\n  if ((tag === \"audio\" || tag === \"video\") && el.hasAttribute(\"controls\")) {\n    return true;\n  }\n  if (el.hasAttribute(\"tabindex\")) {\n    return true;\n  }\n  if (el.hasAttribute(\"contenteditable\") && el.getAttribute(\"contenteditable\") !== \"false\") {\n    return true;\n  }\n  const isNativelyTabbable = [\n    \"button\",\n    \"input\",\n    \"select\",\n    \"textarea\",\n    \"a\",\n    \"audio\",\n    \"video\",\n    \"summary\",\n    \"iframe\"\n  ].includes(tag);\n  if (isNativelyTabbable) {\n    return true;\n  }\n  return isOverflowingAndTabbable(el);\n}\nfunction getTabbableBoundary(root) {\n  var _a, _b;\n  const tabbableElements = getTabbableElements(root);\n  const start = (_a = tabbableElements[0]) != null ? _a : null;\n  const end = (_b = tabbableElements[tabbableElements.length - 1]) != null ? _b : null;\n  return { start, end };\n}\nfunction getSlottedChildrenOutsideRootElement(slotElement, root) {\n  var _a;\n  return ((_a = slotElement.getRootNode({ composed: true })) == null ? void 0 : _a.host) !== root;\n}\nfunction getTabbableElements(root) {\n  const walkedEls = /* @__PURE__ */ new WeakMap();\n  const tabbableElements = [];\n  function walk(el) {\n    if (el instanceof Element) {\n      if (el.hasAttribute(\"inert\") || el.closest(\"[inert]\")) {\n        return;\n      }\n      if (walkedEls.has(el)) {\n        return;\n      }\n      walkedEls.set(el, true);\n      if (!tabbableElements.includes(el) && isTabbable(el)) {\n        tabbableElements.push(el);\n      }\n      if (el instanceof HTMLSlotElement && getSlottedChildrenOutsideRootElement(el, root)) {\n        el.assignedElements({ flatten: true }).forEach((assignedEl) => {\n          walk(assignedEl);\n        });\n      }\n      if (el.shadowRoot !== null && el.shadowRoot.mode === \"open\") {\n        walk(el.shadowRoot);\n      }\n    }\n    for (const e of el.children) {\n      walk(e);\n    }\n  }\n  walk(root);\n  return tabbableElements.sort((a, b) => {\n    const aTabindex = Number(a.getAttribute(\"tabindex\")) || 0;\n    const bTabindex = Number(b.getAttribute(\"tabindex\")) || 0;\n    return bTabindex - aTabindex;\n  });\n}\n\nexport {\n  getTabbableBoundary,\n  getTabbableElements\n};\n"],
  "mappings": "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",
  "names": ["computedStyleMap", "getCachedComputedStyle", "el", "computedStyle", "isVisible", "isOverflowingAndTabbable", "overflowY", "overflowX", "isTabbable", "tag", "tabindex", "rootNode", "findRadios", "firstChecked", "getTabbableBoundary", "root", "_a", "_b", "tabbableElements", "getTabbableElements", "start", "end", "getSlottedChildrenOutsideRootElement", "slotElement", "walkedEls", "walk", "assignedEl", "e", "a", "b", "aTabindex"]
}
