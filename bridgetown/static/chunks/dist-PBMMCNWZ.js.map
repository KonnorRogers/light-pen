{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/@github+clipboard-copy-element@1.3.0/node_modules/@github/clipboard-copy-element/dist/clipboard.js", "../../../../node_modules/.pnpm/@github+clipboard-copy-element@1.3.0/node_modules/@github/clipboard-copy-element/dist/clipboard-copy-element.js", "../../../../node_modules/.pnpm/@github+clipboard-copy-element@1.3.0/node_modules/@github/clipboard-copy-element/dist/clipboard-copy-element-define.js", "../../../../node_modules/.pnpm/@github+clipboard-copy-element@1.3.0/node_modules/@github/clipboard-copy-element/dist/index.js"],
  "sourcesContent": ["function createNode(text) {\n    const node = document.createElement('pre');\n    node.style.width = '1px';\n    node.style.height = '1px';\n    node.style.position = 'fixed';\n    node.style.top = '5px';\n    node.textContent = text;\n    return node;\n}\nexport function copyNode(node) {\n    if ('clipboard' in navigator) {\n        return navigator.clipboard.writeText(node.textContent || '');\n    }\n    const selection = getSelection();\n    if (selection == null) {\n        return Promise.reject(new Error());\n    }\n    selection.removeAllRanges();\n    const range = document.createRange();\n    range.selectNodeContents(node);\n    selection.addRange(range);\n    document.execCommand('copy');\n    selection.removeAllRanges();\n    return Promise.resolve();\n}\nexport function copyText(text) {\n    if ('clipboard' in navigator) {\n        return navigator.clipboard.writeText(text);\n    }\n    const body = document.body;\n    if (!body) {\n        return Promise.reject(new Error());\n    }\n    const node = createNode(text);\n    body.appendChild(node);\n    copyNode(node);\n    body.removeChild(node);\n    return Promise.resolve();\n}\n", "import { copyNode, copyText } from './clipboard.js';\nasync function copy(button) {\n    const id = button.getAttribute('for');\n    const text = button.getAttribute('value');\n    function trigger() {\n        button.dispatchEvent(new CustomEvent('clipboard-copy', { bubbles: true }));\n    }\n    if (button.getAttribute('aria-disabled') === 'true') {\n        return;\n    }\n    if (text) {\n        await copyText(text);\n        trigger();\n    }\n    else if (id) {\n        const root = 'getRootNode' in Element.prototype ? button.getRootNode() : button.ownerDocument;\n        if (!(root instanceof Document || ('ShadowRoot' in window && root instanceof ShadowRoot)))\n            return;\n        const node = root.getElementById(id);\n        if (node) {\n            await copyTarget(node);\n            trigger();\n        }\n    }\n}\nfunction copyTarget(content) {\n    if (content instanceof HTMLInputElement || content instanceof HTMLTextAreaElement) {\n        return copyText(content.value);\n    }\n    else if (content instanceof HTMLAnchorElement && content.hasAttribute('href')) {\n        return copyText(content.href);\n    }\n    else {\n        return copyNode(content);\n    }\n}\nfunction clicked(event) {\n    const button = event.currentTarget;\n    if (button instanceof HTMLElement) {\n        copy(button);\n    }\n}\nfunction keydown(event) {\n    if (event.key === ' ' || event.key === 'Enter') {\n        const button = event.currentTarget;\n        if (button instanceof HTMLElement) {\n            event.preventDefault();\n            copy(button);\n        }\n    }\n}\nfunction focused(event) {\n    ;\n    event.currentTarget.addEventListener('keydown', keydown);\n}\nfunction blurred(event) {\n    ;\n    event.currentTarget.removeEventListener('keydown', keydown);\n}\nexport class ClipboardCopyElement extends HTMLElement {\n    static define(tag = 'clipboard-copy', registry = customElements) {\n        registry.define(tag, this);\n        return this;\n    }\n    constructor() {\n        super();\n        this.addEventListener('click', clicked);\n        this.addEventListener('focus', focused);\n        this.addEventListener('blur', blurred);\n    }\n    connectedCallback() {\n        if (!this.hasAttribute('tabindex')) {\n            this.setAttribute('tabindex', '0');\n        }\n        if (!this.hasAttribute('role')) {\n            this.setAttribute('role', 'button');\n        }\n    }\n    get value() {\n        return this.getAttribute('value') || '';\n    }\n    set value(text) {\n        this.setAttribute('value', text);\n    }\n}\n", "import { ClipboardCopyElement } from './clipboard-copy-element.js';\nconst root = (typeof globalThis !== 'undefined' ? globalThis : window);\ntry {\n    root.ClipboardCopyElement = ClipboardCopyElement.define();\n}\ncatch (e) {\n    if (!(root.DOMException && e instanceof DOMException && e.name === 'NotSupportedError') &&\n        !(e instanceof ReferenceError)) {\n        throw e;\n    }\n}\nexport default ClipboardCopyElement;\nexport * from './clipboard-copy-element.js';\n", "import { ClipboardCopyElement } from './clipboard-copy-element.js';\nexport { ClipboardCopyElement };\nexport default ClipboardCopyElement;\nexport * from './clipboard-copy-element-define.js';\n"],
  "mappings": "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",
  "names": ["root"]
}
