{
  "version": 3,
  "sources": ["../../../../../node_modules/.pnpm/lit-html@3.1.4/node_modules/lit-html/src/directives/when.ts", "../../../../../node_modules/.pnpm/lit-html@3.1.4/node_modules/lit-html/src/directive.ts", "../../../../../node_modules/.pnpm/lit-html@3.1.4/node_modules/lit-html/src/directives/unsafe-html.ts", "../../../../../exports/styles/default-theme.styles.js", "../../../../../exports/styles/code-styles.js", "../../../../../node_modules/.pnpm/prism-esm@1.29.0-fix.4/node_modules/prism-esm/prism-core.js", "../../../../../node_modules/.pnpm/prism-esm@1.29.0-fix.4/node_modules/prism-esm/components/prism-markup.js", "../../../../../node_modules/.pnpm/prism-esm@1.29.0-fix.4/node_modules/prism-esm/components/prism-css.js", "../../../../../node_modules/.pnpm/prism-esm@1.29.0-fix.4/node_modules/prism-esm/components/prism-clike.js", "../../../../../node_modules/.pnpm/prism-esm@1.29.0-fix.4/node_modules/prism-esm/components/prism-javascript.js", "../../../../../node_modules/.pnpm/prism-esm@1.29.0-fix.4/node_modules/prism-esm/plugins/file-highlight/prism-file-highlight.js", "../../../../../node_modules/.pnpm/prism-esm@1.29.0-fix.4/node_modules/prism-esm/prism.js", "../../../../../node_modules/.pnpm/prism-esm@1.29.0-fix.4/node_modules/prism-esm/components/prism-markup-templating.js", "../../../../../node_modules/.pnpm/prism-esm@1.29.0-fix.4/node_modules/prism-esm/components/prism-css-extras.js", "../../../../../node_modules/.pnpm/prism-esm@1.29.0-fix.4/node_modules/prism-esm/components/prism-js-extras.js", "../../../../../node_modules/.pnpm/prism-esm@1.29.0-fix.4/node_modules/prism-esm/components/prism-js-templates.js", "../../../../../node_modules/.pnpm/prism-esm@1.29.0-fix.4/node_modules/prism-esm/components/prism-jsx.js", "../../../../../node_modules/.pnpm/prism-esm@1.29.0-fix.4/node_modules/prism-esm/components/prism-typescript.js", "../../../../../node_modules/.pnpm/prism-esm@1.29.0-fix.4/node_modules/prism-esm/components/prism-tsx.js", "../../../../../internal/prism-highlight.js", "../../../../../internal/debounce.js", "../../../../../internal/elements-to-strings.js", "../../../../../internal/dedent.js", "../../../../../internal/line-number-plugin.js", "../../../../../internal/number-range.js", "../../../../../internal/line-highlight-plugin.js", "../../../../../exports/components/light-code/light-code.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\ntype Falsy = null | undefined | false | 0 | -0 | 0n | '';\n\n/**\n * When `condition` is true, returns the result of calling `trueCase()`, else\n * returns the result of calling `falseCase()` if `falseCase` is defined.\n *\n * This is a convenience wrapper around a ternary expression that makes it a\n * little nicer to write an inline conditional without an else.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     ${when(this.user, () => html`User: ${this.user.username}`, () => html`Sign In...`)}\n *   `;\n * }\n * ```\n */\nexport function when<C extends Falsy, T, F = undefined>(\n  condition: C,\n  trueCase: (c: C) => T,\n  falseCase?: (c: C) => F,\n): F;\nexport function when<C, T, F>(\n  condition: C extends Falsy ? never : C,\n  trueCase: (c: C) => T,\n  falseCase?: (c: C) => F,\n): T;\nexport function when<C, T, F = undefined>(\n  condition: C,\n  trueCase: (c: Exclude<C, Falsy>) => T,\n  falseCase?: (c: Extract<C, Falsy>) => F,\n): C extends Falsy ? F : T;\nexport function when(\n  condition: unknown,\n  trueCase: (c: unknown) => unknown,\n  falseCase?: (c: unknown) => unknown,\n): unknown {\n  return condition ? trueCase(condition) : falseCase?.(condition);\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {Disconnectable, Part} from './lit-html.js';\n\nexport {\n  AttributePart,\n  BooleanAttributePart,\n  ChildPart,\n  ElementPart,\n  EventPart,\n  Part,\n  PropertyPart,\n} from './lit-html.js';\n\nexport interface DirectiveClass {\n  new (part: PartInfo): Directive;\n}\n\n/**\n * This utility type extracts the signature of a directive class's render()\n * method so we can use it for the type of the generated directive function.\n */\nexport type DirectiveParameters<C extends Directive> = Parameters<C['render']>;\n\n/**\n * A generated directive function doesn't evaluate the directive, but just\n * returns a DirectiveResult object that captures the arguments.\n */\nexport interface DirectiveResult<C extends DirectiveClass = DirectiveClass> {\n  /**\n   * This property needs to remain unminified.\n   * @internal */\n  ['_$litDirective$']: C;\n  /** @internal */\n  values: DirectiveParameters<InstanceType<C>>;\n}\n\nexport const PartType = {\n  ATTRIBUTE: 1,\n  CHILD: 2,\n  PROPERTY: 3,\n  BOOLEAN_ATTRIBUTE: 4,\n  EVENT: 5,\n  ELEMENT: 6,\n} as const;\n\nexport type PartType = (typeof PartType)[keyof typeof PartType];\n\nexport interface ChildPartInfo {\n  readonly type: typeof PartType.CHILD;\n}\n\nexport interface AttributePartInfo {\n  readonly type:\n    | typeof PartType.ATTRIBUTE\n    | typeof PartType.PROPERTY\n    | typeof PartType.BOOLEAN_ATTRIBUTE\n    | typeof PartType.EVENT;\n  readonly strings?: ReadonlyArray<string>;\n  readonly name: string;\n  readonly tagName: string;\n}\n\nexport interface ElementPartInfo {\n  readonly type: typeof PartType.ELEMENT;\n}\n\n/**\n * Information about the part a directive is bound to.\n *\n * This is useful for checking that a directive is attached to a valid part,\n * such as with directive that can only be used on attribute bindings.\n */\nexport type PartInfo = ChildPartInfo | AttributePartInfo | ElementPartInfo;\n\n/**\n * Creates a user-facing directive function from a Directive class. This\n * function has the same parameters as the directive's render() method.\n */\nexport const directive =\n  <C extends DirectiveClass>(c: C) =>\n  (...values: DirectiveParameters<InstanceType<C>>): DirectiveResult<C> => ({\n    // This property needs to remain unminified.\n    ['_$litDirective$']: c,\n    values,\n  });\n\n/**\n * Base class for creating custom directives. Users should extend this class,\n * implement `render` and/or `update`, and then pass their subclass to\n * `directive`.\n */\nexport abstract class Directive implements Disconnectable {\n  //@internal\n  __part!: Part;\n  //@internal\n  __attributeIndex: number | undefined;\n  //@internal\n  __directive?: Directive;\n\n  //@internal\n  _$parent!: Disconnectable;\n\n  // These will only exist on the AsyncDirective subclass\n  //@internal\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // This property needs to remain unminified.\n  //@internal\n  ['_$notifyDirectiveConnectionChanged']?(isConnected: boolean): void;\n\n  constructor(_partInfo: PartInfo) {}\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  /** @internal */\n  _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined,\n  ) {\n    this.__part = part;\n    this._$parent = parent;\n    this.__attributeIndex = attributeIndex;\n  }\n  /** @internal */\n  _$resolve(part: Part, props: Array<unknown>): unknown {\n    return this.update(part, props);\n  }\n\n  abstract render(...props: Array<unknown>): unknown;\n\n  update(_part: Part, props: Array<unknown>): unknown {\n    return this.render(...props);\n  }\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {nothing, TemplateResult, noChange} from '../lit-html.js';\nimport {directive, Directive, PartInfo, PartType} from '../directive.js';\n\nconst HTML_RESULT = 1;\n\nexport class UnsafeHTMLDirective extends Directive {\n  static directiveName = 'unsafeHTML';\n  static resultType = HTML_RESULT;\n\n  private _value: unknown = nothing;\n  private _templateResult?: TemplateResult;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.CHILD) {\n      throw new Error(\n        `${\n          (this.constructor as typeof UnsafeHTMLDirective).directiveName\n        }() can only be used in child bindings`,\n      );\n    }\n  }\n\n  render(value: string | typeof nothing | typeof noChange | undefined | null) {\n    if (value === nothing || value == null) {\n      this._templateResult = undefined;\n      return (this._value = value);\n    }\n    if (value === noChange) {\n      return value;\n    }\n    if (typeof value != 'string') {\n      throw new Error(\n        `${\n          (this.constructor as typeof UnsafeHTMLDirective).directiveName\n        }() called with a non-string value`,\n      );\n    }\n    if (value === this._value) {\n      return this._templateResult;\n    }\n    this._value = value;\n    const strings = [value] as unknown as TemplateStringsArray;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (strings as any).raw = strings;\n    // WARNING: impersonating a TemplateResult like this is extremely\n    // dangerous. Third-party directives should not do this.\n    return (this._templateResult = {\n      // Cast to a known set of integers that satisfy ResultType so that we\n      // don't have to export ResultType and possibly encourage this pattern.\n      // This property needs to remain unminified.\n      ['_$litType$']: (this.constructor as typeof UnsafeHTMLDirective)\n        .resultType as 1 | 2,\n      strings,\n      values: [],\n    });\n  }\n}\n\n/**\n * Renders the result as HTML, rather than text.\n *\n * The values `undefined`, `null`, and `nothing`, will all result in no content\n * (empty string) being rendered.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive(UnsafeHTMLDirective);\n", "import { css } from \"lit\";\nexport const theme = css`\n  /**\n * One Light theme for prism.js\n * Based on Atom's One Light theme: https://github.com/atom/atom/tree/master/packages/one-light-syntax\n */\n\n  /**\n * One Light colours (accurate as of commit eb064bf on 19 Feb 2021)\n * From colors.less\n * --mono-1: hsl(230, 8%, 24%);\n * --mono-2: hsl(230, 6%, 44%);\n * --mono-3: hsl(230, 4%, 64%);\n * --hue-1: hsl(198, 99%, 37%);\n * --hue-2: hsl(221, 87%, 60%);\n * --hue-3: hsl(301, 63%, 40%);\n * --hue-4: hsl(119, 34%, 47%);\n * --hue-5: hsl(5, 74%, 59%);\n * --hue-5-2: hsl(344, 84%, 43%);\n * --hue-6: hsl(35, 99%, 36%);\n * --hue-6-2: hsl(35, 99%, 40%);\n * --syntax-fg: hsl(230, 8%, 24%);\n * --syntax-bg: hsl(230, 1%, 98%);\n * --syntax-gutter: hsl(230, 1%, 62%);\n * --syntax-guide: hsla(230, 8%, 24%, 0.2);\n * --syntax-accent: hsl(230, 100%, 66%);\n * From syntax-variables.less\n * --syntax-selection-color: hsl(230, 1%, 90%);\n * --syntax-gutter-background-color-selected: hsl(230, 1%, 90%);\n * --syntax-cursor-line: hsla(230, 8%, 24%, 0.05);\n * <---- Additional Tokens --->\n * --syntax-gutter-border: 1px solid darkgray;\n * --syntax-highlight-bg: hsl(210, 9%, 95%);\n * --syntax-highlight-selected-bg: hsla(230, 8%, 79%, 0.5);\n\n *  --syntax-deleted-selected-bg: hsla(353, 95%, 66%, 0.25);\n *  --syntax-deleted-bg: hsla(353, 95%, 66%, 0.25);\n\n *  --syntax-inserted-bg: hsla(137, 100%, 95%);\n *  --syntax-inserted-selected-bg: hsla(135, 73%, 55%, 0.25)\n */\n\n  :host {\n    --mono-1: hsl(230, 8%, 24%);\n    --mono-2: hsl(230, 6%, 44%);\n    --mono-3: hsl(230, 4%, 64%);\n    --hue-1: hsl(198, 99%, 37%);\n    --hue-2: hsl(221, 87%, 60%);\n    --hue-3: hsl(301, 63%, 40%);\n    --hue-4: hsl(119, 34%, 47%);\n    --hue-5: hsl(5, 74%, 59%);\n    --hue-5-2: hsl(344, 84%, 43%);\n    --hue-6: hsl(35, 99%, 36%);\n    --hue-6-2: hsl(35, 99%, 40%);\n    --syntax-fg: hsl(230, 8%, 24%);\n    --syntax-bg: hsl(230, 1%, 98%);\n    --syntax-gutter: hsl(230, 1%, 62%);\n    --syntax-guide: hsla(230, 8%, 24%, 0.2);\n    --syntax-accent: hsl(230, 100%, 66%);\n    /** From syntax-variables.less */\n    --syntax-selection-color: hsl(230, 1%, 90%);\n    --syntax-gutter-background-color-selected: hsl(230, 1%, 90%);\n    --syntax-cursor-line: hsla(230, 8%, 24%, 0.05);\n\n    /* --- additional tokens --> */\n    --syntax-gutter-border: 1px solid darkgray;\n\n    --syntax-highlight-bg: hsl(210, 9%, 95%);\n    --syntax-highlight-selected-bg: hsla(230, 8%, 79%, 0.5);\n\n    --syntax-deleted-bg: hsla(353, 95%, 86%, 0.25);\n    --syntax-deleted-selected-bg: hsla(353, 95%, 66%, 0.25);\n\n    --syntax-inserted-bg: hsla(137, 100%, 95%);\n    --syntax-inserted-selected-bg: hsla(135, 73%, 55%, 0.25);\n  }\n\n  code[class*=\"language-\"],\n  pre[class*=\"language-\"] {\n    background: var(--syntax-bg);\n    color: var(--syntax-fg);\n    direction: ltr;\n    text-align: left;\n    -webkit-hyphens: none;\n    -moz-hyphens: none;\n    -ms-hyphens: none;\n    hyphens: none;\n  }\n\n  /* Selection */\n  code[class*=\"language-\"]::-moz-selection,\n  code[class*=\"language-\"] *::-moz-selection,\n  pre[class*=\"language-\"] *::-moz-selection {\n    background: var(--syntax-selection-color);\n    color: inherit;\n  }\n\n  code[class*=\"language-\"]::selection,\n  code[class*=\"language-\"] *::selection,\n  pre[class*=\"language-\"] *::selection {\n    background: var(--syntax-selection-color);\n    color: inherit;\n  }\n\n  .token.comment,\n  .token.prolog,\n  .token.cdata {\n    color: var(--mono-3);\n  }\n\n  .token.doctype,\n  .token.punctuation,\n  .token.entity {\n    color: var(--mono-1);\n  }\n\n  .token.attr-name,\n  .token.class-name,\n  .token.boolean,\n  .token.constant,\n  .token.number,\n  .token.atrule {\n    color: var(--hue-6);\n  }\n\n  .token.keyword {\n    color: var(--hue-3);\n  }\n\n  .token.property,\n  .token.tag,\n  .token.symbol,\n  .token.deleted,\n  .token.important {\n    color: var(--hue-5);\n  }\n\n  .token.selector,\n  .token.string,\n  .token.char,\n  .token.builtin,\n  .token.inserted,\n  .token.regex,\n  .token.attr-value,\n  .token.attr-value > .token.punctuation {\n    color: var(--hue-4);\n  }\n\n  .token.variable,\n  .token.operator,\n  .token.function {\n    color: var(--hue-2);\n  }\n\n  .token.url {\n    color: var(--hue-1);\n  }\n\n  /* HTML overrides */\n  .token.attr-value > .token.punctuation.attr-equals,\n  .token.special-attr > .token.attr-value > .token.value.css {\n    color: var(--mono-1);\n  }\n\n  /* CSS overrides */\n  .language-css .token.selector {\n    color: var(--hue-5);\n  }\n\n  .language-css .token.property {\n    color: var(--mono-1);\n  }\n\n  .language-css .token.function,\n  .language-css .token.url > .token.function {\n    color: var(--hue-1);\n  }\n\n  .language-css .token.url > .token.string.url {\n    color: var(--hue-4);\n  }\n\n  .language-css .token.important,\n  .language-css .token.atrule .token.rule {\n    color: var(--hue-3);\n  }\n\n  /* JS overrides */\n  .language-javascript .token.operator {\n    color: var(--hue-3);\n  }\n\n  .language-javascript\n    .token.template-string\n    > .token.interpolation\n    > .token.interpolation-punctuation.punctuation {\n    color: var(--hue-5-2);\n  }\n\n  /* JSON overrides */\n  .language-json .token.operator {\n    color: var(--mono-1);\n  }\n\n  .language-json .token.null.keyword {\n    color: var(--hue-6);\n  }\n\n  /* MD overrides */\n  .language-markdown .token.url,\n  .language-markdown .token.url > .token.operator,\n  .language-markdown .token.url-reference.url > .token.string {\n    color: var(--mono-1);\n  }\n\n  .language-markdown .token.url > .token.content {\n    color: var(--hue-2);\n  }\n\n  .language-markdown .token.url > .token.url,\n  .language-markdown .token.url-reference.url {\n    color: var(--hue-1);\n  }\n\n  .language-markdown .token.blockquote.punctuation,\n  .language-markdown .token.hr.punctuation {\n    color: var(--mono-3);\n    font-style: italic;\n  }\n\n  .language-markdown .token.code-snippet {\n    color: var(--hue-4);\n  }\n\n  .language-markdown .token.bold .token.content {\n    color: var(--hue-6);\n  }\n\n  .language-markdown .token.italic .token.content {\n    color: var(--hue-3);\n  }\n\n  .language-markdown .token.strike .token.content,\n  .language-markdown .token.strike .token.punctuation,\n  .language-markdown .token.list.punctuation,\n  .language-markdown .token.title.important > .token.punctuation {\n    color: var(--hue-5);\n  }\n\n  /* General */\n  .token.bold {\n    font-weight: bold;\n  }\n\n  .token.comment,\n  .token.italic {\n    font-style: italic;\n  }\n\n  .token.entity {\n    cursor: help;\n  }\n\n  .token.namespace {\n    opacity: 0.8;\n  }\n\n  /* Plugin overrides */\n  /* Selectors should have higher specificity than those in the plugins' default stylesheets */\n\n  /* Show Invisibles plugin overrides */\n  .token.token.tab:not(:empty):before,\n  .token.token.cr:before,\n  .token.token.lf:before,\n  .token.token.space:before {\n    color: var(--syntax-guide);\n  }\n\n  /* Toolbar plugin overrides */\n  /* Space out all buttons and move them away from the right edge of the code block */\n  div.code-toolbar > .toolbar.toolbar > .toolbar-item {\n    margin-right: 0.4em;\n  }\n\n  /* Styling the buttons */\n  div.code-toolbar > .toolbar.toolbar > .toolbar-item > button,\n  div.code-toolbar > .toolbar.toolbar > .toolbar-item > a,\n  div.code-toolbar > .toolbar.toolbar > .toolbar-item > span {\n    background: var(--syntax-selection-color);\n    color: var(--mono-2);\n    padding: 0.1em 0.4em;\n    border-radius: 0.3em;\n  }\n\n  div.code-toolbar > .toolbar.toolbar > .toolbar-item > button:hover,\n  div.code-toolbar > .toolbar.toolbar > .toolbar-item > button:focus,\n  div.code-toolbar > .toolbar.toolbar > .toolbar-item > a:hover,\n  div.code-toolbar > .toolbar.toolbar > .toolbar-item > a:focus,\n  div.code-toolbar > .toolbar.toolbar > .toolbar-item > span:hover,\n  div.code-toolbar > .toolbar.toolbar > .toolbar-item > span:focus {\n    background: hsl(230, 1%, 78%); /* custom: darken(--syntax-bg, 20%) */\n    color: var(--mono-1);\n  }\n\n  /* Line Highlight plugin overrides */\n  /* The highlighted line itself */\n  .line-highlight.line-highlight {\n    background: var(--syntax-highlight-bg);\n  }\n\n  /* Selection on highlighted lines */\n  pre.diff-highlight\n    > code\n    .token.token.line-highlight:not(.prefix)::-moz-selection,\n  pre.diff-highlight\n    > code\n    .token.token.line-highlight:not(.prefix)\n    *::-moz-selection,\n  pre\n    > code.diff-highlight\n    .token.token.line-highlight:not(.prefix)::-moz-selection,\n  pre\n    > code.diff-highlight\n    .token.token.line-highlight:not(.prefix)\n    *::-moz-selection {\n    background-color: var(--syntax-highlight-selected-bg);\n  }\n\n  /* Selection on highlighted lines */\n  pre.diff-highlight > code .token.token.line-highlight:not(.prefix)::selection,\n  pre.diff-highlight\n    > code\n    .token.token.line-highlight:not(.prefix)\n    *::selection,\n  pre > code.diff-highlight .token.token.line-highlight:not(.prefix)::selection,\n  pre\n    > code.diff-highlight\n    .token.token.line-highlight:not(.prefix)\n    *::selection {\n    background-color: var(--syntax-highlight-selected-bg);\n  }\n\n  /* Hovering over a linkable line number (in the gutter area) */\n  /* Requires Line Numbers plugin as well */\n  pre[id].linkable-line-numbers.linkable-line-numbers\n    span.line-numbers-rows\n    > span:hover:before {\n    background-color: var(--syntax-cursor-line);\n  }\n\n  /* Line Numbers and Command Line plugins overrides */\n  /* Line separating gutter from coding area */\n  .line-numbers.line-numbers .line-numbers-rows,\n  .command-line .command-line-prompt {\n    border-right-color: var(--syntax-guide);\n  }\n\n  /* Stuff in the gutter */\n  .line-numbers .line-numbers-rows > span:before,\n  .command-line .command-line-prompt > span:before {\n    color: var(--syntax-gutter);\n  }\n\n  /* Match Braces plugin overrides */\n  /* Note: Outline colour is inherited from the braces */\n  .rainbow-braces .token.token.punctuation.brace-level-1,\n  .rainbow-braces .token.token.punctuation.brace-level-5,\n  .rainbow-braces .token.token.punctuation.brace-level-9 {\n    color: var(--hue-5);\n  }\n\n  .rainbow-braces .token.token.punctuation.brace-level-2,\n  .rainbow-braces .token.token.punctuation.brace-level-6,\n  .rainbow-braces .token.token.punctuation.brace-level-10 {\n    color: var(--hue-4);\n  }\n\n  .rainbow-braces .token.token.punctuation.brace-level-3,\n  .rainbow-braces .token.token.punctuation.brace-level-7,\n  .rainbow-braces .token.token.punctuation.brace-level-11 {\n    color: var(--hue-2);\n  }\n\n  .rainbow-braces .token.token.punctuation.brace-level-4,\n  .rainbow-braces .token.token.punctuation.brace-level-8,\n  .rainbow-braces .token.token.punctuation.brace-level-12 {\n    color: var(--hue-3);\n  }\n\n  /* Diff Highlight plugin overrides */\n  /* Taken from https://github.com/atom/github/blob/master/styles/variables.less */\n  pre.diff-highlight > code .token.token.deleted:not(.prefix),\n  pre > code.diff-highlight .token.token.deleted:not(.prefix) {\n    background-color: var(--syntax-deleted-bg);\n  }\n\n  pre.diff-highlight > code .token.token.deleted:not(.prefix)::-moz-selection,\n  pre.diff-highlight > code .token.token.deleted:not(.prefix) *::-moz-selection,\n  pre > code.diff-highlight .token.token.deleted:not(.prefix)::-moz-selection,\n  pre\n    > code.diff-highlight\n    .token.token.deleted:not(.prefix)\n    *::-moz-selection {\n    background-color: var(--syntax-deleted-selected-bg);\n  }\n\n  pre.diff-highlight > code .token.token.deleted:not(.prefix)::selection,\n  pre.diff-highlight > code .token.token.deleted:not(.prefix) *::selection,\n  pre > code.diff-highlight .token.token.deleted:not(.prefix)::selection,\n  pre > code.diff-highlight .token.token.deleted:not(.prefix) *::selection {\n    background-color: var(--syntax-deleted-selected-bg);\n  }\n\n  pre.diff-highlight > code .token.token.inserted:not(.prefix),\n  pre > code.diff-highlight .token.token.inserted:not(.prefix) {\n    background-color: var(--syntax-inserted-bg);\n  }\n\n  pre.diff-highlight > code .token.token.inserted:not(.prefix)::-moz-selection,\n  pre.diff-highlight\n    > code\n    .token.token.inserted:not(.prefix)\n    *::-moz-selection,\n  pre > code.diff-highlight .token.token.inserted:not(.prefix)::-moz-selection,\n  pre\n    > code.diff-highlight\n    .token.token.inserted:not(.prefix)\n    *::-moz-selection {\n    background-color: var(--syntax-inserted-selected-bg);\n  }\n\n  pre.diff-highlight > code .token.token.inserted:not(.prefix)::selection,\n  pre.diff-highlight > code .token.token.inserted:not(.prefix) *::selection,\n  pre > code.diff-highlight .token.token.inserted:not(.prefix)::selection,\n  pre > code.diff-highlight .token.token.inserted:not(.prefix) *::selection {\n    background-color: var(--syntax-inserted-selected-bg);\n  }\n\n  /* Previewers plugin overrides */\n  /* Based on https://github.com/atom-community/atom-ide-datatip/blob/master/styles/atom-ide-datatips.less and https://github.com/atom/atom/blob/master/packages/one-light-ui */\n  /* Border around popup */\n  .prism-previewer.prism-previewer:before,\n  .prism-previewer-gradient.prism-previewer-gradient div {\n    border-color: hsl(0, 0, 95%);\n  }\n\n  /* Angle and time should remain as circles and are hence not included */\n  .prism-previewer-color.prism-previewer-color:before,\n  .prism-previewer-gradient.prism-previewer-gradient div,\n  .prism-previewer-easing.prism-previewer-easing:before {\n    border-radius: 0.3em;\n  }\n\n  /* Triangles pointing to the code */\n  .prism-previewer.prism-previewer:after {\n    border-top-color: hsl(0, 0, 95%);\n  }\n\n  .prism-previewer-flipped.prism-previewer-flipped.after {\n    border-bottom-color: hsl(0, 0, 95%);\n  }\n\n  /* Background colour within the popup */\n  .prism-previewer-angle.prism-previewer-angle:before,\n  .prism-previewer-time.prism-previewer-time:before,\n  .prism-previewer-easing.prism-previewer-easing {\n    background: hsl(0, 0%, 100%);\n  }\n\n  /* For angle, this is the positive area (eg. 90deg will display one quadrant in this colour) */\n  /* For time, this is the alternate colour */\n  .prism-previewer-angle.prism-previewer-angle circle,\n  .prism-previewer-time.prism-previewer-time circle {\n    stroke: var(--mono-1);\n    stroke-opacity: 1;\n  }\n\n  /* Stroke colours of the handle, direction point, and vector itself */\n  .prism-previewer-easing.prism-previewer-easing circle,\n  .prism-previewer-easing.prism-previewer-easing path,\n  .prism-previewer-easing.prism-previewer-easing line {\n    stroke: var(--mono-1);\n  }\n\n  /* Fill colour of the handle */\n  .prism-previewer-easing.prism-previewer-easing circle {\n    fill: transparent;\n  }\n`;\n", "import { css } from \"lit\";\n\nexport const codeStyles = css`\n  [part~=\"pre\"],\n  [part~=\"code\"] {\n    background: hsl(230, 1%, 98%);\n    color: hsl(230, 8%, 24%);\n    line-height: 1.8;\n  }\n\n  [part~=\"pre\"] {\n    margin: 0;\n    /* This removes line wrapping */\n    word-break: break-all;\n    white-space: pre;\n    padding: 0;\n    height: 100%;\n  }\n\n  [part~=\"code\"] {\n    display: grid;\n    grid-template-columns: max-content minmax(max-content, 1fr);\n  }\n\n  :host([wrap=\"soft\"]) [part~=\"pre\"] {\n    /* this creates line-wrapping. */\n    word-break: break-word;\n    white-space: pre-wrap;\n  }\n\n  :host([disable-line-numbers]) [part~=\"code\"] {\n    grid-template-columns: minmax(0, 1fr);\n  }\n\n  [part~=\"line\"] {\n    display: inline-block;\n    width: 100%;\n    padding-inline-start: 6px;\n    padding-inline-end: 6px;\n    min-height: 1lh;\n  }\n\n  [part~=\"line\"]::before {\n    content: \" \";\n    line-height: inherit;\n    padding-inline-end: 6px;\n  }\n\n  [part~=\"line\"].deleted::before {\n    content: \"-\";\n  }\n\n  [part~=\"line\"].inserted::before {\n    content: \"+\";\n  }\n\n  [part~=\"gutter-cell\"] {\n    display: inline-block;\n    padding-inline-end: 0.5em;\n    padding-inline-start: 0.75em;\n    -webkit-user-select: none;\n    user-select: none;\n    color: rgba(0, 0, 0, 0.35);\n    background-color: var(--syntax-bg);\n    font-variant-numeric: tabular-nums;\n    text-align: end;\n    position: sticky;\n    z-index: 1;\n    left: 0px;\n  }\n`;\n", "/// <reference lib=\"WebWorker\"/>\n\nconst _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Export the current environment so if users want to assign it to the global scope, they can.\n * @example\n *   import { Prism, environment } from \"prism-esm\"\n *   environment.Prism = Prism\n */\nexport const environment = _self;\n\n/**\n * @typedef {object} PrismOptions\n * @property {boolean} [manual=false]\n * @property {boolean} [disableWorkerMessageHandler]\n */\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nexport class Prism {\n\t/**\n\t * @param {PrismOptions} options\n\t */\n\tconstructor (options = {}) {\n\n\t\t// The grammar object for plaintext\n\t\tlet plainTextGrammar = {};\n\n\t\tconst {\n\t\t\tdisableWorkerMessageHandler,\n\t\t\tmanual\n\t\t} = options\n\n\t\tthis.manual = manual\n\n\t\tif (this.manual == null) {\n\t\t\tthis.manual = true\n\t\t}\n\n\t\tthis.plugins = {}\n\n\t\tconst _ = this\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @public\n\t\t */\n\t\tthis.disableWorkerMessageHandler = Boolean(disableWorkerMessageHandler)\n\n\t\tthis.Token = Token\n\t\tthis.util = new Util(this)\n\t\tconst util = this.util\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t * @type {{[key: string]: any}}\n\t\t */\n\t\tthis.languages = {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: (id, redef) => {\n\t\t\t\tlet lang = this.util.clone(this.languages[id])\n\t\t\t\t// let lang = this.languages[id]\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: (inside, before, insert, root) => {\n\t\t\t\tif (!root) {\n\t\t\t\t\troot = /** @type {Record<string, unknown>} */ (this.languages);\n\t\t\t\t}\n\n\t\t\t\tlet grammar = root[inside];\n\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tlet ret = {};\n\n\t\t\t\tfor (let token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\tthis.languages.DFS(this.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS (o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tthis.DFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tthis.DFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @public\n\t\t */\n\t\tthis.hooks = {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (!environment.document) {\n\t\t\tif (!environment.addEventListener) {\n\t\t\t\t// in Node.js\n\t\t\t\treturn _;\n\t\t\t}\n\n\t\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t\t// In worker\n\t\t\t\tenvironment.addEventListener('message', function (evt) {\n\t\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\t\tvar lang = message.language;\n\t\t\t\t\tvar code = message.code;\n\t\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t\tenvironment.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\t\tif (immediateClose) {\n\t\t\t\t\t\t_self.close();\n\t\t\t\t\t}\n\t\t\t\t}, false);\n\t\t\t}\n\n\t\t\treturn _;\n\t\t}\n\n\n\t\tfunction highlightAutomaticallyCallback() {\n\t\t\tif (!_.manual) {\n\t\t\t\t_.highlightAll();\n\t\t\t}\n\t\t}\n\n\n\t\t// Get current script and highlight\n\t\tconst script = this.util.currentScript();\n\n\t\tif (script) {\n\t\t\tthis.filename = script.src;\n\n\t\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t\t_.manual = true;\n\t\t\t}\n\t\t}\n\n\n\t\tif (!_.manual) {\n\t\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\t\tvar readyState = document.readyState;\n\t\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t\t} else {\n\t\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* This is the most high-level function in Prism\u2019s API.\n\t* It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t* each one of them.\n\t*\n\t* This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t*\n\t* @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t* @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t* @memberof Prism\n\t* @public\n\t*/\n\thighlightAll (async, callback) {\n\t\tthis.highlightAllUnder(document, async, callback);\n\t}\n\n\t/**\n\t\t* Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t* {@link Prism.highlightElement} on each one of them.\n\t\t*\n\t\t* The following hooks will be run:\n\t\t* 1. `before-highlightall`\n\t\t* 2. `before-all-elements-highlight`\n\t\t* 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t*\n\t\t* @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t* @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t* @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t* @memberof Prism\n\t\t* @public\n\t\t*/\n\thighlightAllUnder (container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tcontainer: container,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\tthis.hooks.run('before-highlightall', env);\n\n\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\tthis.hooks.run('before-all-elements-highlight', env);\n\n\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\tthis.highlightElement(element, async === true, env.callback);\n\t\t}\n\t}\n\n\t/**\n\t* Highlights the code inside a single element.\n\t*\n\t* The following hooks will be run:\n\t* 1. `before-sanity-check`\n\t* 2. `before-highlight`\n\t* 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t* 4. `before-insert`\n\t* 5. `after-highlight`\n\t* 6. `complete`\n\t*\n\t* Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t* the element's language.\n\t*\n\t* @param {Element} element The element containing the code.\n\t* It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t* @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t* to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t* [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t*\n\t* Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t* asynchronous highlighting to work. You can build your own bundle on the\n\t* [Download page](https://prismjs.com/download.html).\n\t* @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t* Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t* @public\n\t*/\n\thighlightElement (element, async, callback) {\n\t\t// Find language\n\t\tvar language = this.util.getLanguage(element);\n\t\tvar grammar = this.languages[language];\n\n\t\t// Set language on the element, if not present\n\t\tthis.util.setLanguage(element, language);\n\n\t\t// Set language on the parent, for styling\n\t\tvar parent = element.parentElement;\n\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\tthis.util.setLanguage(parent, language);\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\tconst insertHighlightedCode = (highlightedCode) => {\n\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\tthis.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\tthis.hooks.run('after-highlight', env);\n\t\t\tthis.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t}\n\n\t\tthis.hooks.run('before-sanity-check', env);\n\n\t\t// plugins may change/add the parent/element\n\t\tparent = env.element.parentElement;\n\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\tparent.setAttribute('tabindex', '0');\n\t\t}\n\n\t\tif (!env.code) {\n\t\t\tthis.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.hooks.run('before-highlight', env);\n\n\t\tif (!env.grammar) {\n\t\t\tinsertHighlightedCode(this.util.encode(env.code));\n\t\t\treturn;\n\t\t}\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(this.filename);\n\n\t\t\tworker.onmessage = function (evt) {\n\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t} else {\n\t\t\tinsertHighlightedCode(this.highlight(env.code, env.grammar, env.language));\n\t\t}\n\t}\n\n\t/**\n\t\t* Low-level function, only use if you know what you\u2019re doing. It accepts a string of text as input\n\t\t* and the language definitions to use, and returns a string with the HTML produced.\n\t\t*\n\t\t* The following hooks will be run:\n\t\t* 1. `before-tokenize`\n\t\t* 2. `after-tokenize`\n\t\t* 3. `wrap`: On each {@link Token}.\n\t\t*\n\t\t* @param {string} text A string with the code to be highlighted.\n\t\t* @param {Grammar} grammar An object containing the tokens to use.\n\t\t*\n\t\t* Usually a language definition like `Prism.languages.markup`.\n\t\t* @param {string} language The name of the language definition passed to `grammar`.\n\t\t* @returns {string} The highlighted HTML.\n\t\t* @memberof Prism\n\t\t* @public\n\t\t* @example\n\t\t* Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t*/\n\thighlight (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\tthis.hooks.run('before-tokenize', env);\n\t\tif (!env.grammar) {\n\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t}\n\t\tenv.tokens = this.tokenize(env.code, env.grammar);\n\t\tthis.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(this.util.encode(env.tokens), env.language, this);\n\t}\n\n\t/**\n\t\t* This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t* and the language definitions to use, and returns an array with the tokenized code.\n\t\t*\n\t\t* When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t*\n\t\t* This method could be useful in other contexts as well, as a very crude parser.\n\t\t*\n\t\t* @param {string} text A string with the code to be highlighted.\n\t\t* @param {Grammar} grammar An object containing the tokens to use.\n\t\t*\n\t\t* Usually a language definition like `Prism.languages.markup`.\n\t\t* @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t* @memberof Prism\n\t\t* @public\n\t\t* @example\n\t\t* let code = `var foo = 0;`;\n\t\t* let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t* tokens.forEach(token => {\n\t\t*     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t*         console.log(`Found numeric literal: ${token.content}`);\n\t\t*     }\n\t\t* });\n\t\t*/\n\ttokenize (text, grammar) {\n\t\tvar rest = grammar?.rest;\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\tvar tokenList = new LinkedList();\n\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0, this);\n\n\t\treturn toArray(tokenList);\n\t}\n}\n\n\n/**\n* Creates a new token.\n* @class\n* @public\n*/\nexport class Token {\n\t/**\n\t* @param {string} type See {@link Token#type type}\n\t* @param {string | TokenStream} content See {@link Token#content content}\n\t* @param {string|string[]} [alias] The alias(es) of the token.\n\t* @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n \t*/\n\tconstructor (type, content, alias, matchedStr) {\n\t/**\n\t\t* The type of the token.\n\t\t*\n\t\t* This is usually the key of a pattern in a {@link Grammar}.\n\t\t*\n\t\t* @type {string}\n\t\t* @see GrammarToken\n\t\t* @public\n\t\t*/\n\tthis.type = type;\n\t/**\n\t\t* The strings or tokens contained by this token.\n\t\t*\n\t\t* This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t*\n\t\t* @type {string | TokenStream}\n\t\t* @public\n\t\t*/\n\tthis.content = content;\n\t/**\n\t\t* The alias(es) of the token.\n\t\t*\n\t\t* @type {string|string[]}\n\t\t* @see GrammarToken\n\t\t* @public\n\t\t*/\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t* Converts the given token or token stream to an HTML representation.\n\t*\n\t* The following hooks will be run:\n\t* 1. `wrap`: On each {@link Token}.\n\t*\n\t* @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t* @param {string} language The name of current language.\n\t* @param {Prism} prism - The instance of prism to use for \"wrap\" hooks\n\t* @returns {string} The HTML representation of the token or token stream.\n\t* @memberof Token\n\t* @static\n\t*/\n\tstatic stringify(o, language, prism) {\n\t\tconst _ = this\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += _.stringify(/** @type {string} */ (e), language, prism);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: _.stringify(o.content, language, prism),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\tprism.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n}\n\n\n// Private helper vars\nlet lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\nlet uniqueId = 0;\n\n/**\n* A namespace for utility methods.\n*\n* All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n* change or disappear at any time.\n*\n*/\nclass Util {\n\t/**\n\t * @param {Prism} prism\n\t */\n\tconstructor (prism) {\n\t\tthis.prism = prism\n\t}\n\n\t/**\n\t * @param {Token | Token[] | string} tokens\n\t * @return {Token | Token[] | string}\n\t */\n\tencode = (tokens) => {\n\t\tif (tokens instanceof Token) {\n\t\t\tconst content = /** @type {string} */ (tokens.content)\n\t\t\treturn new Token(tokens.type, /** @type {string} */ (this.encode(content)), tokens.alias);\n\t\t} else if (Array.isArray(tokens)) {\n\t\t\treturn tokens.map((token) => /** @type {Token} */ (this.encode(token)));\n\t\t} else {\n\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t}\n\t}\n\n\t/**\n\t\t* Returns the name of the type of the given value.\n\t\t*\n\t\t* @param {any} o\n\t\t* @returns {string}\n\t\t* @example\n\t\t* type(null)      === 'Null'\n\t\t* type(undefined) === 'Undefined'\n\t\t* type(123)       === 'Number'\n\t\t* type('foo')     === 'String'\n\t\t* type(true)      === 'Boolean'\n\t\t* type([1, 2])    === 'Array'\n\t\t* type({})        === 'Object'\n\t\t* type(String)    === 'Function'\n\t\t* type(/abc+/)    === 'RegExp'\n\t\t*/\n\ttype (o) {\n\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t}\n\n\t/**\n\t* Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t*\n\t* If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t*\n\t* @param {Element} element\n\t* @returns {string}\n\t*/\n\tgetLanguage (element) {\n\t\twhile (element) {\n\t\t\tvar m = lang.exec(element.className);\n\t\t\tif (m) {\n\t\t\t\treturn m[1].toLowerCase();\n\t\t\t}\n\t\t\telement = element.parentElement;\n\t\t}\n\t\treturn 'none';\n\t}\n\n\t/**\n\t* Sets the Prism `language-xxxx` class of the given element.\n\t*\n\t* @param {Element} element\n\t* @param {string} language\n\t* @returns {void}\n\t*/\n\tsetLanguage (element, language) {\n\t\t// remove all `language-xxxx` classes\n\t\t// (this might leave behind a leading space)\n\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t// add the new `language-xxxx` class\n\t\t// (using `classList` will automatically clean up spaces for us)\n\t\telement.classList.add('language-' + language);\n\t}\n\n\t/**\n\t\t* Returns a unique number for the given object. Later calls will still return the same number.\n\t\t*\n\t\t* @param {Object} obj\n\t\t* @returns {number}\n\t\t*/\n\tobjId (obj) {\n\t\tif (!obj['__id']) {\n\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t}\n\t\treturn obj['__id'];\n\t}\n\n\t/**\n\t* Creates a deep clone of the given object.\n\t*\n\t* The main intended use of this function is to clone language definitions.\n\t*\n\t* @template T\n\t* @param {T} o\n\t* @returns {T}\n\t*/\n\tclone (o) {\n\t\treturn structuredClone(o)\n\t}\n\n\t/**\n\t* Returns whether a given class is active for `element`.\n\t*\n\t* The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t* if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t* given class is just the given class with a `no-` prefix.\n\t*\n\t* Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t* closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t* ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t*\n\t* In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t* version of it, the class is considered active.\n\t*\n\t* @param {Element} element\n\t* @param {string} className\n\t* @param {boolean} [defaultActivation=false]\n\t* @returns {boolean}\n\t*/\n\tisActive (element, className, defaultActivation) {\n\t\tvar no = 'no-' + className;\n\n\t\twhile (element) {\n\t\t\tvar classList = element.classList;\n\t\t\tif (classList.contains(className)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (classList.contains(no)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telement = element.parentElement;\n\t\t}\n\t\treturn !!defaultActivation;\n\t}\n\n\t/**\n\t\t* Returns the script element that is currently executing.\n\t\t*\n\t\t* This does __not__ work for line script element.\n\t\t*\n\t\t* @returns {HTMLScriptElement | null}\n\t\t*/\n\tcurrentScript () {\n\t\tif (typeof document === 'undefined') {\n\t\t\treturn null;\n\t\t}\n\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t}\n\n\t\t// IE11 workaround\n\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t// this will not work for inline scripts\n\n\t\ttry {\n\t\t\tthrow new Error();\n\t\t} catch (err) {\n\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t// A stack will look like this:\n\t\t\t//\n\t\t\t// Error\n\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\tif (src) {\n\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\n/**\n\t* @param {RegExp} pattern\n\t* @param {number} pos\n\t* @param {string} text\n\t* @param {boolean} lookbehind\n\t* @returns {RegExpExecArray | null}\n\t*/\nfunction matchPattern(pattern, pos, text, lookbehind) {\n\tpattern.lastIndex = pos;\n\tvar match = pattern.exec(text);\n\tif (match && lookbehind && match[1]) {\n\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\tvar lookbehindLength = match[1].length;\n\t\tmatch.index += lookbehindLength;\n\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t}\n\treturn match;\n}\n\n/**\n\t* @param {string} text\n\t* @param {LinkedList<string | Token>} tokenList\n\t* @param {any} grammar\n\t* @param {LinkedListNode<string | Token>} startNode\n\t* @param {number} startPos\n\t* @param {Prism} [prismInstance]\n\t* @param {RematchOptions} [rematch]\n\t* @returns {void}\n\t* @private\n\t*\n\t* @typedef RematchOptions\n\t* @property {string} cause\n\t* @property {number} reach\n\t*/\nfunction matchGrammar(text, tokenList, grammar, startNode, startPos, prismInstance, rematch) {\n\tfor (var token in grammar) {\n\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar patterns = grammar[token];\n\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar patternObj = patterns[j];\n\t\t\tvar inside = patternObj.inside;\n\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\tvar alias = patternObj.alias;\n\n\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t}\n\n\t\t\t/** @type {RegExp} */\n\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t) {\n\n\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\tvar match;\n\n\t\t\t\tif (greedy) {\n\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t}\n\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\tpos = p;\n\n\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\tfor (\n\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\tk = k.next\n\t\t\t\t\t) {\n\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t}\n\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t// replace with the new match\n\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t} else {\n\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\tvar from = match.index;\n\t\t\t\tvar matchStr = match[0];\n\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\tvar reach = pos + str.length;\n\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\trematch.reach = reach;\n\t\t\t\t}\n\n\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\tif (before) {\n\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\tpos += before.length;\n\t\t\t\t}\n\n\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\tvar wrapped = new Token(token, inside ? prismInstance.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\tif (after) {\n\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t}\n\n\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\treach: reach\n\t\t\t\t\t};\n\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, prismInstance, nestedRematch);\n\n\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @template T\n * @typedef LinkedListNode\n * @property {T} value\n * @property {LinkedListNode<T> | null} prev The previous node.\n * @property {LinkedListNode<T> | null} next The next node.\n * @private\n */\n\n/**\n\t* @template T\n\t* @private\n\t*/\nfunction LinkedList() {\n\t/** @type {LinkedListNode<T>} */\n\tvar head = { value: null, prev: null, next: null };\n\t/** @type {LinkedListNode<T>} */\n\tvar tail = { value: null, prev: head, next: null };\n\thead.next = tail;\n\n\t/** @type {LinkedListNode<T>} */\n\tthis.head = head;\n\t/** @type {LinkedListNode<T>} */\n\tthis.tail = tail;\n\tthis.length = 0;\n}\n\n/**\n\t* Adds a new node with the given value to the list.\n\t*\n\t* @param {LinkedList<T>} list\n\t* @param {LinkedListNode<T>} node\n\t* @param {T} value\n\t* @returns {LinkedListNode<T>} The added node.\n\t* @template T\n\t*/\nfunction addAfter(list, node, value) {\n\t// assumes that node != list.tail && values.length >= 0\n\tvar next = node.next;\n\n\tvar newNode = { value: value, prev: node, next: next };\n\tnode.next = newNode;\n\tnext.prev = newNode;\n\tlist.length++;\n\n\treturn newNode;\n}\n/**\n\t* Removes `count` nodes after the given node. The given node will not be removed.\n\t*\n\t* @param {LinkedList<T>} list\n\t* @param {LinkedListNode<T>} node\n\t* @param {number} count\n\t* @template T\n\t*/\nfunction removeRange(list, node, count) {\n\tvar next = node.next;\n\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\tnext = next.next;\n\t}\n\tnode.next = next;\n\tnext.prev = node;\n\tlist.length -= i;\n}\n/**\n\t* @param {LinkedList<T>} list\n\t* @returns {T[]}\n\t* @template T\n\t*/\nfunction toArray(list) {\n\tvar array = [];\n\tvar node = list.head.next;\n\twhile (node !== list.tail) {\n\t\tarray.push(node.value);\n\t\tnode = node.next;\n\t}\n\treturn array;\n}\n\n\n\n// Typescript note:\n// The following can be used to import the Token type in JSDoc:\n//\n//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @public\n */\n\n/**\n * Options for loading grammars in \"./components/*.js\"\n * @typedef {object} LoaderOptions\n * @property {boolean} [force]\n */\n\n/**\n * @typedef {object} TokenStreamItem\n * @property {string} type\n * @property {string | Array<string|TokenStreamItem>} content\n */\n\n/**\n * @typedef {Array<string|TokenStreamItem>} TokenStream\n */", "/**\n* @param {import(\"../prism.js\").Prism} Prism\n* @param {import(\"../prism.js\").LoaderOptions} [options]\n*/\nexport function loader (Prism, options) {\n    if (typeof Prism === 'undefined') return\n    if (options?.force !== true && Prism.languages['markup']) {\n      return\n    }\n\tPrism.languages.markup = {\n\t\t'comment': {\n\t\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'prolog': {\n\t\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'doctype': {\n\t\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'internal-subset': {\n\t\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tinside: null // see below\n\t\t\t\t},\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\t\tgreedy: true\n\t\t\t\t},\n\t\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t\t'name': /[^\\s<>'\"]+/\n\t\t\t}\n\t\t},\n\t\t'cdata': {\n\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\tgreedy: true\n\t\t},\n\t\t'tag': {\n\t\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'tag': {\n\t\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'special-attr': [],\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'punctuation': /\\/?>/,\n\t\t\t\t'attr-name': {\n\t\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t},\n\t\t'entity': [\n\t\t\t{\n\t\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\t\talias: 'named-entity'\n\t\t\t},\n\t\t\t/&#x?[\\da-f]{1,8};/i\n\t\t]\n\t};\n\n\tPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\t\tPrism.languages.markup['entity'];\n\tPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n\t// Plugin to make entity title show the real entity, idea by Roman Komarov\n\tPrism.hooks.add('wrap', function (env) {\n\n\t\tif (env.type === 'entity') {\n\t\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t\t}\n\t});\n\n\tObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t\t/**\n\t \t* Adds an inlined language to markup.\n\t \t*\n\t \t* An example of an inlined language is CSS with `<style>` tags.\n\t \t*\n\t \t* @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t \t* case insensitive.\n\t \t* @param {string} lang The language key.\n\t \t* @example\n\t \t* addInlined('style', 'css');\n\t \t*/\n\t\tvalue: function addInlined(tagName, lang) {\n\t\t\tvar includedCdataInside = {};\n\t\t\tincludedCdataInside['language-' + lang] = {\n\t\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: Prism.languages[lang]\n\t\t\t};\n\t\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\t\tvar inside = {\n\t\t\t\t'included-cdata': {\n\t\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\t\tinside: includedCdataInside\n\t\t\t\t}\n\t\t\t};\n\t\t\tinside['language-' + lang] = {\n\t\t\t\tpattern: /[\\s\\S]+/,\n\t\t\t\tinside: Prism.languages[lang]\n\t\t\t};\n\n\t\t\tvar def = {};\n\t\t\tdef[tagName] = {\n\t\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: inside\n\t\t\t};\n\n\t\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t\t}\n\t});\n\tObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t\t/**\n\t \t* Adds an pattern to highlight languages embedded in HTML attributes.\n\t \t*\n\t \t* An example of an inlined language is CSS with `style` attributes.\n\t \t*\n\t \t* @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t \t* case insensitive.\n\t \t* @param {string} lang The language key.\n\t \t* @example\n\t \t* addAttribute('style', 'css');\n\t \t*/\n\t\tvalue: function (attrName, lang) {\n\t\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\t\tpattern: RegExp(\n\t\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t\t'i'\n\t\t\t\t),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\tPrism.languages.html = Prism.languages.markup;\n\tPrism.languages.mathml = Prism.languages.markup;\n\tPrism.languages.svg = Prism.languages.markup;\n\n\tPrism.languages.xml = Prism.languages.extend('markup', {});\n\tPrism.languages.ssml = Prism.languages.xml;\n\tPrism.languages.atom = Prism.languages.xml;\n\tPrism.languages.rss = Prism.languages.xml;\n}", "import { loader as markupLoader } from \"./prism-markup.js\"\n\n/**\n* @param {import(\"../prism.js\").Prism} Prism\n* @param {import(\"../prism.js\").LoaderOptions} [options]\n*/\nexport function loader (Prism, options) {\n    if (typeof Prism === 'undefined') return\n    if (options?.force !== true && Prism.languages['css']) {\n      return\n    }\n\n\tmarkupLoader(Prism)\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n}", "/**\n* @param {import(\"../prism.js\").Prism} Prism\n* @param {import(\"../prism.js\").LoaderOptions} [options]\n*/\nexport function loader (Prism, options) {\n    if (typeof Prism === 'undefined') return\n    if (options?.force !== true && Prism.languages['clike']) {\n      return\n    }\n\tPrism.languages.clike = {\n\t\t'comment': [\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t}\n\t\t],\n\t\t'string': {\n\t\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'class-name': {\n\t\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /[.\\\\]/\n\t\t\t}\n\t\t},\n\t\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t\t'boolean': /\\b(?:false|true)\\b/,\n\t\t'function': /\\b\\w+(?=\\()/,\n\t\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t\t'punctuation': /[{}[\\];(),.:]/\n\t};\n}", "import { loader as clikeLoader } from \"./prism-clike.js\"\nimport { loader as markupLoader } from \"./prism-markup.js\"\n\n/**\n* @param {import(\"../prism.js\").Prism} Prism\n* @param {import(\"../prism.js\").LoaderOptions} [options]\n*/\nexport function loader (Prism, options) {\n    if (typeof Prism === 'undefined') return\n    if (options?.force !== true && Prism.languages['javascript']) {\n      return\n    }\n\n\tclikeLoader(Prism)\n\tmarkupLoader(Prism)\n\n\tPrism.languages.javascript = Prism.languages.extend('clike', {\n\t\t'class-name': [\n\t\t\tPrism.languages.clike['class-name'],\n\t\t\t{\n\t\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'keyword': [\n\t\t\t{\n\t\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t],\n\t\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t\t'number': {\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[^\\w$])/.source +\n\t\t\t\t'(?:' +\n\t\t\t\t(\n\t\t\t\t\t// constant\n\t\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t\t'|' +\n\t\t\t\t\t// binary integer\n\t\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t\t'|' +\n\t\t\t\t\t// octal integer\n\t\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t\t'|' +\n\t\t\t\t\t// hexadecimal integer\n\t\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t\t'|' +\n\t\t\t\t\t// decimal bigint\n\t\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t\t'|' +\n\t\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t\t) +\n\t\t\t\t')' +\n\t\t\t\t/(?![\\w$])/.source\n\t\t\t),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n\t});\n\n\tPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\n\tPrism.languages.insertBefore('javascript', 'keyword', {\n\t\t'regex': {\n\t\t\tpattern: RegExp(\n\t\t\t\t// lookbehind\n\t\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t\t// Regex pattern:\n\t\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t\t/\\//.source +\n\t\t\t\t'(?:' +\n\t\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t\t'|' +\n\t\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t\t')' +\n\t\t\t\t// lookahead\n\t\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'regex-source': {\n\t\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'language-regex',\n\t\t\t\t\tinside: Prism.languages.regex\n\t\t\t\t},\n\t\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t\t}\n\t\t},\n\t\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t\t'function-variable': {\n\t\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\t\talias: 'function'\n\t\t},\n\t\t'parameter': [\n\t\t\t{\n\t\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: Prism.languages.javascript\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: Prism.languages.javascript\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: Prism.languages.javascript\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: Prism.languages.javascript\n\t\t\t}\n\t\t],\n\t\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n\t});\n\n\tPrism.languages.insertBefore('javascript', 'string', {\n\t\t'hashbang': {\n\t\t\tpattern: /^#!.*/,\n\t\t\tgreedy: true,\n\t\t\talias: 'comment'\n\t\t},\n\t\t'template-string': {\n\t\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'template-punctuation': {\n\t\t\t\t\tpattern: /^`|`$/,\n\t\t\t\t\talias: 'string'\n\t\t\t\t},\n\t\t\t\t'interpolation': {\n\t\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t\t},\n\t\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'string': /[\\s\\S]+/\n\t\t\t}\n\t\t},\n\t\t'string-property': {\n\t\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\talias: 'property'\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('javascript', 'operator', {\n\t\t'literal-property': {\n\t\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'property'\n\t\t},\n\t});\n\n\tif (Prism.languages.markup) {\n\t\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t\t// add attribute support for all DOM events.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\t\tPrism.languages.markup.tag.addAttribute(\n\t\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t\t'javascript'\n\t\t);\n\t}\n\n\tPrism.languages.js = Prism.languages.javascript;\n}", "export function Plugin (Prism) {\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading\u2026';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '\u2716 Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '\u2716 Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\t/**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */\n\tfunction loadFile(src, success, error) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', src, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tsuccess(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.send(null);\n\t}\n\n\t/**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */\n\tfunction parseRange(range) {\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n\t\tif (m) {\n\t\t\tvar start = Number(m[1]);\n\t\t\tvar comma = m[2];\n\t\t\tvar end = m[3];\n\n\t\t\tif (!comma) {\n\t\t\t\treturn [start, start];\n\t\t\t}\n\t\t\tif (!end) {\n\t\t\t\treturn [start, undefined];\n\t\t\t}\n\t\t\treturn [start, Number(end)];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tPrism.util.setLanguage(code, language);\n\t\t\tPrism.util.setLanguage(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tloadFile(\n\t\t\t\tsrc,\n\t\t\t\tfunction (text) {\n\t\t\t\t\t// mark as loaded\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t// handle data-range\n\t\t\t\t\tvar range = parseRange(pre.getAttribute('data-range'));\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g);\n\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\n\t\t\t\t\t\tvar start = range[0];\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1];\n\n\t\t\t\t\t\tif (start < 0) { start += lines.length; }\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length));\n\t\t\t\t\t\tif (end < 0) { end += lines.length; }\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length));\n\n\t\t\t\t\t\ttext = lines.slice(start, end).join('\\n');\n\n\t\t\t\t\t\t// add data-start for line numbers\n\t\t\t\t\t\tif (!pre.hasAttribute('data-start')) {\n\t\t\t\t\t\t\tpre.setAttribute('data-start', String(start + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// highlight code\n\t\t\t\t\tcode.textContent = text;\n\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// mark as failed\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\tcode.textContent = error;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n}", "import { Prism as OGPrism } from \"./prism-core.js\"\nimport { loader as markupLoader } from \"./components/prism-markup.js\"\nimport { loader as cssLoader } from \"./components/prism-css.js\"\nimport { loader as clikeLoader } from \"./components/prism-clike.js\"\nimport { loader as javascriptLoader } from \"./components/prism-javascript.js\"\nimport { Plugin as FileHighlightPlugin } from \"./plugins/file-highlight/prism-file-highlight.js\"\nexport {\n\tenvironment,\n\tToken,\n} from \"./prism-core.js\"\n\n/**\n * @typedef {import(\"./prism-core.js\").GrammarToken} GrammarToken\n * @typedef {import(\"./prism-core.js\").Grammar} Grammar\n * @typedef {import(\"./prism-core.js\").TokenStream} TokenStream\n * @typedef {import(\"./prism-core.js\").HookCallback} HookCallback\n * @typedef {import(\"./prism-core.js\").PrismOptions} PrismOptions\n * @typedef {import(\"./prism-core.js\").HighlightCallback} HighlightCallback\n * @typedef {import(\"./prism-core.js\").LoaderOptions} LoaderOptions\n */\n\n/**\n * The main entrypoint class\n */\nexport class Prism extends OGPrism {\n\t/**\n\t * @param {ConstructorParameters<typeof OGPrism>} args\n\t */\n\tconstructor (...args) {\n\t\tsuper(...args)\n\n\t\t// Load initial plugins / languages\n\t\tmarkupLoader(this)\n\t\tcssLoader(this)\n\t\tclikeLoader(this)\n\t\tjavascriptLoader(this)\n\t\tFileHighlightPlugin(this)\n\t}\n}\n", "import { loader as markupLoader } from \"./prism-markup.js\"\n\n/**\n* @param {import(\"../prism.js\").Prism} Prism\n* @param {import(\"../prism.js\").LoaderOptions} [options]\n*/\nexport function loader (Prism, options) {\n    if (typeof Prism === 'undefined') return\n    if (options?.force !== true && Prism.languages['markup-templating']) {\n      return\n    }\n\n    markupLoader(Prism)\n\n\t/**\n\t* Returns the placeholder for the given language id and index.\n\t*\n\t* @param {string} language\n\t* @param {string|number} index\n\t* @returns {string}\n\t*/\n\tfunction getPlaceholder(language, index) {\n\t\treturn '___' + language.toUpperCase() + index + '___';\n\t}\n\n\tObject.defineProperties(Prism.languages['markup-templating'] = {}, {\n\t\tbuildPlaceholders: {\n\t\t\t/**\n\t\t\t* Tokenize all inline templating expressions matching `placeholderPattern`.\n\t\t\t*\n\t\t\t* If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n\t\t\t* `true` will be replaced.\n\t\t\t*\n\t\t\t* @param {object} env The environment of the `before-tokenize` hook.\n\t\t\t* @param {string} language The language id.\n\t\t\t* @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n\t\t\t* @param {(match: string) => boolean} [replaceFilter]\n\t\t\t*/\n\t\t\tvalue: function (env, language, placeholderPattern, replaceFilter) {\n\t\t\t\tif (env.language !== language) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar tokenStack = env.tokenStack = [];\n\n\t\t\t\tenv.code = env.code.replace(placeholderPattern, function (match) {\n\t\t\t\t\tif (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n\t\t\t\t\t\treturn match;\n\t\t\t\t\t}\n\t\t\t\t\tvar i = tokenStack.length;\n\t\t\t\t\tvar placeholder;\n\n\t\t\t\t\t// Check for existing strings\n\t\t\t\t\twhile (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n\t\t\t\t\t\t++i;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create a sparse array\n\t\t\t\t\ttokenStack[i] = match;\n\n\t\t\t\t\treturn placeholder;\n\t\t\t\t});\n\n\t\t\t\t// Switch the grammar to markup\n\t\t\t\tenv.grammar = Prism.languages.markup;\n\t\t\t}\n\t\t},\n\t\ttokenizePlaceholders: {\n\t\t\t/**\n\t\t\t* Replace placeholders with proper tokens after tokenizing.\n\t\t\t*\n\t\t\t* @param {object} env The environment of the `after-tokenize` hook.\n\t\t\t* @param {string} language The language id.\n\t\t\t*/\n\t\t\tvalue: function (env, language) {\n\t\t\t\tif (env.language !== language || !env.tokenStack) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Switch the grammar back\n\t\t\t\tenv.grammar = Prism.languages[language];\n\n\t\t\t\tvar j = 0;\n\t\t\t\tvar keys = Object.keys(env.tokenStack);\n\n\t\t\t\tfunction walkTokens(tokens) {\n\t\t\t\t\tfor (var i = 0; i < tokens.length; i++) {\n\t\t\t\t\t\t// all placeholders are replaced already\n\t\t\t\t\t\tif (j >= keys.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar token = tokens[i];\n\t\t\t\t\t\tif (typeof token === 'string' || (token.content && typeof token.content === 'string')) {\n\t\t\t\t\t\t\tvar k = keys[j];\n\t\t\t\t\t\t\tvar t = env.tokenStack[k];\n\t\t\t\t\t\t\tvar s = typeof token === 'string' ? token : token.content;\n\t\t\t\t\t\t\tvar placeholder = getPlaceholder(language, k);\n\n\t\t\t\t\t\t\tvar index = s.indexOf(placeholder);\n\t\t\t\t\t\t\tif (index > -1) {\n\t\t\t\t\t\t\t\t++j;\n\n\t\t\t\t\t\t\t\tvar before = s.substring(0, index);\n\t\t\t\t\t\t\t\tvar middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n\t\t\t\t\t\t\t\tvar after = s.substring(index + placeholder.length);\n\n\t\t\t\t\t\t\t\tvar replacement = [];\n\t\t\t\t\t\t\t\tif (before) {\n\t\t\t\t\t\t\t\t\treplacement.push.apply(replacement, walkTokens([before]));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treplacement.push(middle);\n\t\t\t\t\t\t\t\tif (after) {\n\t\t\t\t\t\t\t\t\treplacement.push.apply(replacement, walkTokens([after]));\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (typeof token === 'string') {\n\t\t\t\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\t\t\t\ttokens.splice.apply(tokens, [i, 1].concat(replacement));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ttoken.content = replacement;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (token.content /* && typeof token.content !== 'string' */) {\n\t\t\t\t\t\t\twalkTokens(token.content);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tokens;\n\t\t\t\t}\n\n\t\t\t\twalkTokens(env.tokens);\n\t\t\t}\n\t\t}\n\t});\n}", "import { loader as cssLoader } from \"./prism-css.js\"\n\n/**\n* @param {import(\"../prism.js\").Prism} Prism\n* @param {import(\"../prism.js\").LoaderOptions} [options]\n*/\nexport function loader (Prism, options) {\n    if (typeof Prism === 'undefined') return\n\n    if (options?.force !== true && Prism.languages['css-extras']) {\n      return\n    }\n\n\t// Stub css-extras so we dont infinitely load.\n    Prism.languages['css-extras'] = {}\n\n    cssLoader(Prism)\n\n\tvar string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\tvar selectorInside;\n\n\tPrism.languages.css.selector = {\n\t\tpattern: Prism.languages.css.selector.pattern,\n\t\tlookbehind: true,\n\t\tinside: selectorInside = {\n\t\t\t'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n\t\t\t'pseudo-class': /:[-\\w]+/,\n\t\t\t'class': /\\.[-\\w]+/,\n\t\t\t'id': /#[-\\w]+/,\n\t\t\t'attribute': {\n\t\t\t\tpattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^\\[|\\]$/,\n\t\t\t\t\t'case-sensitivity': {\n\t\t\t\t\t\tpattern: /(\\s)[si]$/i,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'keyword'\n\t\t\t\t\t},\n\t\t\t\t\t'namespace': {\n\t\t\t\t\t\tpattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'punctuation': /\\|$/\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'attr-name': {\n\t\t\t\t\t\tpattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'attr-value': [\n\t\t\t\t\t\tstring,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t'operator': /[|~*^$]?=/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'n-th': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'number': /[\\dn]+/,\n\t\t\t\t\t\t'operator': /[+-]/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t],\n\t\t\t'combinator': />|\\+|~|\\|\\|/,\n\n\t\t\t// the `tag` token has been existed and removed.\n\t\t\t// because we can't find a perfect tokenize to match it.\n\t\t\t// if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n\n\t\t\t'punctuation': /[(),]/,\n\t\t}\n\t};\n\n\tPrism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;\n\n\tPrism.languages.insertBefore('css', 'property', {\n\t\t'variable': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n\t\t\tlookbehind: true\n\t\t}\n\t});\n\n\tvar unit = {\n\t\tpattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n\t\tlookbehind: true\n\t};\n\t// 123 -123 .123 -.123 12.3 -12.3\n\tvar number = {\n\t\tpattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n\t\tlookbehind: true\n\t};\n\n\tPrism.languages.insertBefore('css', 'function', {\n\t\t'operator': {\n\t\t\tpattern: /(\\s)[+\\-*\\/](?=\\s)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t// CAREFUL!\n\t\t// Previewers and Inline color use hexcode and color.\n\t\t'hexcode': {\n\t\t\tpattern: /\\B#[\\da-f]{3,8}\\b/i,\n\t\t\talias: 'color'\n\t\t},\n\t\t'color': [\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|RebeccaPurple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'unit': unit,\n\t\t\t\t\t'number': number,\n\t\t\t\t\t'function': /[\\w-]+(?=\\()/,\n\t\t\t\t\t'punctuation': /[(),]/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t// it's important that there is no boundary assertion after the hex digits\n\t\t'entity': /\\\\[\\da-f]{1,8}/i,\n\t\t'unit': unit,\n\t\t'number': number\n\t});\n}", "import { loader as javascriptLoader } from \"./prism-javascript.js\"\n\n/**\n* @param {import(\"../prism.js\").Prism} Prism\n* @param {import(\"../prism.js\").LoaderOptions} [options]\n*/\nexport function loader (Prism, options) {\n    if (typeof Prism === 'undefined') return\n    if (options?.force !== true && Prism.languages['js-extras']) {\n      return\n    }\n\n    Prism.languages['js-extras'] = {}\n\n\tjavascriptLoader(Prism)\n\n\tPrism.languages.insertBefore('javascript', 'function-variable', {\n\t\t'method-variable': {\n\t\t\tpattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n\t\t\tlookbehind: true,\n\t\t\talias: ['function-variable', 'method', 'function', 'property-access']\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('javascript', 'function', {\n\t\t'method': {\n\t\t\tpattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n\t\t\tlookbehind: true,\n\t\t\talias: ['function', 'property-access']\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('javascript', 'constant', {\n\t\t'known-class-name': [\n\t\t\t{\n\t\t\t\t// standard built-ins\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n\t\t\t\tpattern: /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\n\t\t\t\talias: 'class-name'\n\t\t\t},\n\t\t\t{\n\t\t\t\t// errors\n\t\t\t\tpattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n\t\t\t\talias: 'class-name'\n\t\t\t}\n\t\t]\n\t});\n\n\t/**\n\t* Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n\t*\n\t* @param {string} source\n\t* @param {string} [flags]\n\t* @returns {RegExp}\n\t*/\n\tfunction withId(source, flags) {\n\t\treturn RegExp(\n\t\t\tsource.replace(/<ID>/g, function () { return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source; }),\n\t\t\tflags);\n\t}\n\tPrism.languages.insertBefore('javascript', 'keyword', {\n\t\t'imports': {\n\t\t\t// https://tc39.es/ecma262/#sec-imports\n\t\t\tpattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t'exports': {\n\t\t\t// https://tc39.es/ecma262/#sec-exports\n\t\t\tpattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t});\n\n\tPrism.languages.javascript['keyword'].unshift(\n\t\t{\n\t\t\tpattern: /\\b(?:as|default|export|from|import)\\b/,\n\t\t\talias: 'module'\n\t\t},\n\t\t{\n\t\t\tpattern: /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\n\t\t\talias: 'control-flow'\n\t\t},\n\t\t{\n\t\t\tpattern: /\\bnull\\b/,\n\t\t\talias: ['null', 'nil']\n\t\t},\n\t\t{\n\t\t\tpattern: /\\bundefined\\b/,\n\t\t\talias: 'nil'\n\t\t}\n\t);\n\n\tPrism.languages.insertBefore('javascript', 'operator', {\n\t\t'spread': {\n\t\t\tpattern: /\\.{3}/,\n\t\t\talias: 'operator'\n\t\t},\n\t\t'arrow': {\n\t\t\tpattern: /=>/,\n\t\t\talias: 'operator'\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('javascript', 'punctuation', {\n\t\t'property-access': {\n\t\t\tpattern: withId(/(\\.\\s*)#?<ID>/.source),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'maybe-class-name': {\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'dom': {\n\t\t\t// this contains only a few commonly used DOM variables\n\t\t\tpattern: /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\n\t\t\talias: 'variable'\n\t\t},\n\t\t'console': {\n\t\t\tpattern: /\\bconsole(?=\\s*\\.)/,\n\t\t\talias: 'class-name'\n\t\t}\n\t});\n\n\n\t// add 'maybe-class-name' to tokens which might be a class name\n\tvar maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n\tfor (var i = 0; i < maybeClassNameTokens.length; i++) {\n\t\tvar token = maybeClassNameTokens[i];\n\t\tvar value = Prism.languages.javascript[token];\n\n\t\t// convert regex to object\n\t\tif (Prism.util.type(value) === 'RegExp') {\n\t\t\tvalue = Prism.languages.javascript[token] = {\n\t\t\t\tpattern: value\n\t\t\t};\n\t\t}\n\n\t\t// keep in mind that we don't support arrays\n\n\t\tvar inside = value.inside || {};\n\t\tvalue.inside = inside;\n\n\t\tinside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n\t}\n}", "import { loader as javascriptLoader } from './prism-javascript.js'\n\n/**\n * @typedef {import(\"../prism-core.js\").Token} Token\n */\n\n/**\n* @param {import(\"../prism.js\").Prism} Prism\n* @param {import(\"../prism.js\").LoaderOptions} [options]\n*/\nexport function loader (Prism, options) {\n    if (typeof Prism === 'undefined') return\n    if (options?.force !== true && Prism.languages['js-templates']) {\n      return\n    }\n\n    Prism.languages['js-templates'] = {}\n\n    javascriptLoader(Prism)\n\n\tvar templateString = Prism.languages.javascript['template-string'];\n\n\t// see the pattern in prism-javascript.js\n\tvar templateLiteralPattern = templateString.pattern.source;\n\tvar interpolationObject = templateString.inside['interpolation'];\n\tvar interpolationPunctuationObject = interpolationObject.inside['interpolation-punctuation'];\n\tvar interpolationPattern = interpolationObject.pattern.source;\n\n\n\t/**\n\t* Creates a new pattern to match a template string with a special tag.\n\t*\n\t* This will return `undefined` if there is no grammar with the given language id.\n\t*\n\t* @param {string} language The language id of the embedded language. E.g. `markdown`.\n\t* @param {string} tag The regex pattern to match the tag.\n\t* @returns {object | undefined}\n\t* @example\n\t* createTemplate('css', /\\bcss/.source);\n\t*/\n\tfunction createTemplate(language, tag) {\n\t\tif (!Prism.languages[language]) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\tpattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'template-punctuation': {\n\t\t\t\t\tpattern: /^`|`$/,\n\t\t\t\t\talias: 'string'\n\t\t\t\t},\n\t\t\t\t'embedded-code': {\n\t\t\t\t\tpattern: /[\\s\\S]+/,\n\t\t\t\t\talias: language\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\n\tPrism.languages.javascript['template-string'] = [\n\t\t// styled-jsx:\n\t\t//   css`a { color: #25F; }`\n\t\t// styled-components:\n\t\t//   styled.h1`color: red;`\n\t\tcreateTemplate('css', /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source),\n\n\t\t// html`<p></p>`\n\t\t// div.innerHTML = `<p></p>`\n\t\tcreateTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source),\n\n\t\t// svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n\t\tcreateTemplate('svg', /\\bsvg/.source),\n\n\t\t// md`# h1`, markdown`## h2`\n\t\tcreateTemplate('markdown', /\\b(?:markdown|md)/.source),\n\n\t\t// gql`...`, graphql`...`, graphql.experimental`...`\n\t\tcreateTemplate('graphql', /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source),\n\n\t\t// sql`...`\n\t\tcreateTemplate('sql', /\\bsql/.source),\n\n\t\t// vanilla template string\n\t\ttemplateString\n\t].filter(Boolean);\n\n\n\t/**\n\t* Returns a specific placeholder literal for the given language.\n\t*\n\t* @param {number} counter\n\t* @param {string} language\n\t* @returns {string}\n\t*/\n\tfunction getPlaceholder(counter, language) {\n\t\treturn '___' + language.toUpperCase() + '_' + counter + '___';\n\t}\n\n\t/**\n\t* Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n\t*\n\t* @param {string} code\n\t* @param {any} grammar\n\t* @param {string} language\n\t* @returns {(string|Token)[]}\n\t*/\n\tfunction tokenizeWithHooks(code, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: code,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\tPrism.hooks.run('before-tokenize', env);\n\t\tenv.tokens = Prism.tokenize(env.code, env.grammar);\n\t\tPrism.hooks.run('after-tokenize', env);\n\t\treturn env.tokens;\n\t}\n\n\t/**\n\t* Returns the token of the given JavaScript interpolation expression.\n\t*\n\t* @param {string} expression The code of the expression. E.g. `\"${42}\"`\n\t* @returns {Token}\n\t*/\n\tfunction tokenizeInterpolationExpression(expression) {\n\t\t/**\n\t\t * @type {import('../prism-core.js').Grammar}\n\t\t */\n\t\tvar tempGrammar = {};\n\t\ttempGrammar['interpolation-punctuation'] = interpolationPunctuationObject;\n\n\t\tvar tokens = Prism.tokenize(expression, tempGrammar);\n\t\tif (tokens.length === 3) {\n\t\t\t/**\n\t\t\t* The token array will look like this\n\t\t\t* [\n\t\t\t*     [\"interpolation-punctuation\", \"${\"]\n\t\t\t*     \"...\" // JavaScript expression of the interpolation\n\t\t\t*     [\"interpolation-punctuation\", \"}\"]\n\t\t\t* ]\n\t\t\t*/\n\n\t\t\tvar args = [1, 1];\n\t\t\t// @ts-expect-error\n\t\t\targs.push.apply(args, tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript'));\n\n\t\t\ttokens.splice.apply(tokens, args);\n\t\t}\n\n\t\treturn new Prism.Token('interpolation', tokens, interpolationObject.alias, expression);\n\t}\n\n\t/**\n\t* Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n\t*\n\t* This function has 3 phases:\n\t*\n\t* 1. Replace all JavaScript interpolation expression with a placeholder.\n\t*    The placeholder will have the syntax of a identify of the target language.\n\t* 2. Tokenize the code with placeholders.\n\t* 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n\t*    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n\t*    tokenized as two tokens by the grammar of the embedded language.\n\t*\n\t* @param {string} code\n\t* @param {object} grammar\n\t* @param {string} language\n\t* @returns {Token}\n\t*/\n\tfunction tokenizeEmbedded(code, grammar, language) {\n\t\t// 1. First filter out all interpolations\n\n\t\t// because they might be escaped, we need a lookbehind, so we use Prism\n\t\tvar _tokens = Prism.tokenize(code, {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: RegExp(interpolationPattern),\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t});\n\n\t\t// replace all interpolations with a placeholder which is not in the code already\n\t\tvar placeholderCounter = 0;\n\t\t/** @type {Object<string, string>} */\n\t\tvar placeholderMap = {};\n\t\tvar embeddedCode = _tokens.map(function (token) {\n\t\t\tif (typeof token === 'string') {\n\t\t\t\treturn token;\n\t\t\t} else {\n\t\t\t\tvar interpolationExpression = token.content;\n\n\t\t\t\tvar placeholder;\n\t\t\t\twhile (code.indexOf(placeholder = getPlaceholder(placeholderCounter++, language)) !== -1) { /* noop */ }\n\n\t\t\t\t// @ts-expect-error\n\t\t\t\tplaceholderMap[placeholder] = interpolationExpression;\n\t\t\t\treturn placeholder;\n\t\t\t}\n\t\t}).join('');\n\n\n\t\t// 2. Tokenize the embedded code\n\n\t\tvar embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language);\n\n\n\t\t// 3. Re-insert the interpolation\n\n\t\tvar placeholders = Object.keys(placeholderMap);\n\t\tplaceholderCounter = 0;\n\n\t\t/**\n\t\t*\n\t\t* @param {(Token|string)[]} tokens\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction walkTokens(tokens) {\n\t\t\tfor (var i = 0; i < tokens.length; i++) {\n\t\t\t\tif (placeholderCounter >= placeholders.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar token = tokens[i];\n\n\t\t\t\tif (typeof token === 'string' || typeof token.content === 'string') {\n\t\t\t\t\tvar placeholder = placeholders[placeholderCounter];\n\t\t\t\t\tvar s = typeof token === 'string' ? token : /** @type {string} */ (token.content);\n\n\t\t\t\t\tvar index = s.indexOf(placeholder);\n\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\t++placeholderCounter;\n\n\t\t\t\t\t\tvar before = s.substring(0, index);\n\t\t\t\t\t\tvar middle = tokenizeInterpolationExpression(placeholderMap[placeholder]);\n\t\t\t\t\t\tvar after = s.substring(index + placeholder.length);\n\n\t\t\t\t\t\tvar replacement = [];\n\t\t\t\t\t\tif (before) {\n\t\t\t\t\t\t\treplacement.push(before);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treplacement.push(middle);\n\t\t\t\t\t\tif (after) {\n\t\t\t\t\t\t\tvar afterTokens = [after];\n\t\t\t\t\t\t\twalkTokens(afterTokens);\n\t\t\t\t\t\t\treplacement.push.apply(replacement, afterTokens);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (typeof token === 'string') {\n\t\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\t\ttokens.splice.apply(tokens, [i, 1].concat(replacement));\n\t\t\t\t\t\t\ti += replacement.length - 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttoken.content = replacement;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar content = token.content;\n\t\t\t\t\tif (Array.isArray(content)) {\n\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\twalkTokens(content);\n\t\t\t\t\t} else {\n\t\t\t\t\t\twalkTokens([content]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\twalkTokens(embeddedTokens);\n\n\t\treturn new Prism.Token(language, embeddedTokens, 'language-' + language, code);\n\t}\n\n\t/**\n\t* The languages for which JS templating will handle tagged template literals.\n\t*\n\t* JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n\t*/\n\tvar supportedLanguages = {\n\t\t'javascript': true,\n\t\t'js': true,\n\t\t'typescript': true,\n\t\t'ts': true,\n\t\t'jsx': true,\n\t\t'tsx': true,\n\t};\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tif (!(env.language in supportedLanguages)) {\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t* Finds and tokenizes all template strings with an embedded languages.\n\t\t*\n\t\t* @param {(Token | string)[]} tokens\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction findTemplateStrings(tokens) {\n\t\t\tfor (var i = 0, l = tokens.length; i < l; i++) {\n\t\t\t\tvar token = tokens[i];\n\n\t\t\t\tif (typeof token === 'string') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar content = token.content;\n\t\t\t\tif (!Array.isArray(content)) {\n\t\t\t\t\tif (typeof content !== 'string') {\n\t\t\t\t\t\tfindTemplateStrings([content]);\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (token.type === 'template-string') {\n\t\t\t\t\t/**\n\t\t\t\t\t* A JavaScript template-string token will look like this:\n\t\t\t\t\t*\n\t\t\t\t\t* [\"template-string\", [\n\t\t\t\t\t*     [\"template-punctuation\", \"`\"],\n\t\t\t\t\t*     (\n\t\t\t\t\t*         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n\t\t\t\t\t*         or\n\t\t\t\t\t*         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n\t\t\t\t\t*                                  It also has an alias which is the language of the embedded code.\n\t\t\t\t\t*     ),\n\t\t\t\t\t*     [\"template-punctuation\", \"`\"]\n\t\t\t\t\t* ]]\n\t\t\t\t\t*/\n\n\t\t\t\t\tvar embedded = content[1];\n\t\t\t\t\tif (content.length === 3 && typeof embedded !== 'string' && embedded.type === 'embedded-code') {\n\t\t\t\t\t\t// get string content\n\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\tvar code = stringContent(embedded);\n\n\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\tvar alias = embedded.alias;\n\t\t\t\t\t\tvar language = Array.isArray(alias) ? alias[0] : alias;\n\n\t\t\t\t\t\tvar grammar = Prism.languages[language];\n\t\t\t\t\t\tif (!grammar) {\n\t\t\t\t\t\t\t// the embedded language isn't registered.\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontent[1] = tokenizeEmbedded(code, grammar, language);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\tfindTemplateStrings(content);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfindTemplateStrings(env.tokens);\n\t});\n\n\n\t/**\n\t* Returns the string content of a token or token stream.\n\t*\n\t* @param {string | Token | (string | Token)[]} value\n\t* @returns {string}\n\t*/\n\tfunction stringContent(value) {\n\t\tif (typeof value === 'string') {\n\t\t\treturn value;\n\t\t} else if (Array.isArray(value)) {\n\t\t\treturn value.map(stringContent).join('');\n\t\t} else {\n\t\t\t// @ts-expect-error\n\t\t\treturn stringContent(value.content);\n\t\t}\n\t}\n}", "import { loader as markupLoader } from './prism-markup.js'\nimport { loader as javascriptLoader } from './prism-javascript.js'\n\n/**\n* @param {import(\"../prism.js\").Prism} Prism\n* @param {import(\"../prism.js\").LoaderOptions} [options]\n*/\nexport function loader (Prism, options) {\n    if (typeof Prism === 'undefined') return\n    if (options?.force !== true && Prism.languages['jsx']) {\n      return\n    }\n\tif (!Prism.languages.markup) {\n\t\tmarkupLoader(Prism)\n\t}\n\tif (!Prism.languages.javascript) {\n\t\tjavascriptLoader(Prism)\n\t}\n\tvar javascript = Prism.util.clone(Prism.languages.javascript);\n\n\tvar space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n\tvar braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n\tvar spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n\n\t/**\n\t* @param {string} source\n\t* @param {string} [flags]\n\t*/\n\tfunction re(source, flags) {\n\t\tsource = source\n\t\t\t.replace(/<S>/g, function () { return space; })\n\t\t\t.replace(/<BRACES>/g, function () { return braces; })\n\t\t\t.replace(/<SPREAD>/g, function () { return spread; });\n\t\treturn RegExp(source, flags);\n\t}\n\n\tspread = re(spread).source;\n\n\n\tPrism.languages.jsx = Prism.languages.extend('markup', javascript);\n\tPrism.languages.jsx.tag.pattern = re(\n\t\t/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source\n\t);\n\n\tPrism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/;\n\tPrism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/;\n\tPrism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n\tPrism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n\n\tPrism.languages.insertBefore('inside', 'attr-name', {\n\t\t'spread': {\n\t\t\tpattern: re(/<SPREAD>/.source),\n\t\t\tinside: Prism.languages.jsx\n\t\t}\n\t}, Prism.languages.jsx.tag);\n\n\tPrism.languages.insertBefore('inside', 'special-attr', {\n\t\t'script': {\n\t\t\t// Allow for two levels of nesting\n\t\t\tpattern: re(/=<BRACES>/.source),\n\t\t\talias: 'language-javascript',\n\t\t\tinside: {\n\t\t\t\t'script-punctuation': {\n\t\t\t\t\tpattern: /^=(?=\\{)/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.jsx\n\t\t\t},\n\t\t}\n\t}, Prism.languages.jsx.tag);\n\n\t// The following will handle plain text inside tags\n\tvar stringifyToken = function (token) {\n\t\tif (!token) {\n\t\t\treturn '';\n\t\t}\n\t\tif (typeof token === 'string') {\n\t\t\treturn token;\n\t\t}\n\t\tif (typeof token.content === 'string') {\n\t\t\treturn token.content;\n\t\t}\n\t\treturn token.content.map(stringifyToken).join('');\n\t};\n\n\tvar walkTokens = function (tokens) {\n\t\tvar openedTags = [];\n\t\tfor (var i = 0; i < tokens.length; i++) {\n\t\t\tvar token = tokens[i];\n\t\t\tvar notTagNorBrace = false;\n\n\t\t\tif (typeof token !== 'string') {\n\t\t\t\tif (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n\t\t\t\t\t// We found a tag, now find its kind\n\n\t\t\t\t\tif (token.content[0].content[0].content === '</') {\n\t\t\t\t\t\t// Closing tag\n\t\t\t\t\t\tif (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n\t\t\t\t\t\t\t// Pop matching opening tag\n\t\t\t\t\t\t\topenedTags.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (token.content[token.content.length - 1].content === '/>') {\n\t\t\t\t\t\t\t// Autoclosed tag, ignore\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Opening tag\n\t\t\t\t\t\t\topenedTags.push({\n\t\t\t\t\t\t\t\ttagName: stringifyToken(token.content[0].content[1]),\n\t\t\t\t\t\t\t\topenedBraces: 0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n\n\t\t\t\t\t// Here we might have entered a JSX context inside a tag\n\t\t\t\t\topenedTags[openedTags.length - 1].openedBraces++;\n\n\t\t\t\t} else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n\n\t\t\t\t\t// Here we might have left a JSX context inside a tag\n\t\t\t\t\topenedTags[openedTags.length - 1].openedBraces--;\n\n\t\t\t\t} else {\n\t\t\t\t\tnotTagNorBrace = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (notTagNorBrace || typeof token === 'string') {\n\t\t\t\tif (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n\t\t\t\t\t// Here we are inside a tag, and not inside a JSX context.\n\t\t\t\t\t// That's plain text: drop any tokens matched.\n\t\t\t\t\tvar plainText = stringifyToken(token);\n\n\t\t\t\t\t// And merge text with adjacent text\n\t\t\t\t\tif (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n\t\t\t\t\t\tplainText += stringifyToken(tokens[i + 1]);\n\t\t\t\t\t\ttokens.splice(i + 1, 1);\n\t\t\t\t\t}\n\t\t\t\t\tif (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n\t\t\t\t\t\tplainText = stringifyToken(tokens[i - 1]) + plainText;\n\t\t\t\t\t\ttokens.splice(i - 1, 1);\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\n\t\t\t\t\ttokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (token.content && typeof token.content !== 'string') {\n\t\t\t\twalkTokens(token.content);\n\t\t\t}\n\t\t}\n\t};\n\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tif (env.language !== 'jsx' && env.language !== 'tsx') {\n\t\t\treturn;\n\t\t}\n\t\twalkTokens(env.tokens);\n\t});\n}", "import { loader as javascriptLoader } from \"./prism-javascript.js\"\n\n/**\n* @param {import(\"../prism.js\").Prism} Prism\n* @param {import(\"../prism.js\").LoaderOptions} [options]\n*/\nexport function loader (Prism, options) {\n    if (typeof Prism === 'undefined') return\n    if (options?.force !== true && Prism.languages['typescript']) {\n      return\n    }\n\tif (!Prism.languages.javascript) {\n\t\tjavascriptLoader(Prism)\n\t}\n\n\tPrism.languages.typescript = Prism.languages.extend('javascript', {\n\t\t'class-name': {\n\t\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: null // see below\n\t\t},\n\t\t'builtin': /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/,\n\t});\n\n\t// The keywords TypeScript adds to JavaScript\n\tPrism.languages.typescript.keyword.push(\n\t\t/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/,\n\t\t// keywords that have to be followed by an identifier\n\t\t/\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/,\n\t\t// This is for `import type *, {}`\n\t\t/\\btype\\b(?=\\s*(?:[\\{*]|$))/\n\t);\n\n\t// doesn't work with TS because TS is too complex\n\tdelete Prism.languages.typescript['parameter'];\n\tdelete Prism.languages.typescript['literal-property'];\n\n\t// a version of typescript specifically for highlighting types\n\tvar typeInside = Prism.languages.extend('typescript', {});\n\tdelete typeInside['class-name'];\n\n\tPrism.languages.typescript['class-name'].inside = typeInside;\n\n\tPrism.languages.insertBefore('typescript', 'function', {\n\t\t'decorator': {\n\t\t\tpattern: /@[$\\w\\xA0-\\uFFFF]+/,\n\t\t\tinside: {\n\t\t\t\t'at': {\n\t\t\t\t\tpattern: /^@/,\n\t\t\t\t\talias: 'operator'\n\t\t\t\t},\n\t\t\t\t'function': /^[\\s\\S]+/\n\t\t\t}\n\t\t},\n\t\t'generic-function': {\n\t\t\t// e.g. foo<T extends \"bar\" | \"baz\">( ...\n\t\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n\t\t\t\t'generic': {\n\t\t\t\t\tpattern: /<[\\s\\S]+/, // everything after the first <\n\t\t\t\t\talias: 'class-name',\n\t\t\t\t\tinside: typeInside\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tPrism.languages.ts = Prism.languages.typescript;\n}", "import { loader as jsxLoader } from \"./prism-jsx.js\"\nimport { loader as typescriptLoader } from \"./prism-typescript.js\"\n\n/**\n* @param {import(\"../prism.js\").Prism} Prism\n* @param {import(\"../prism.js\").LoaderOptions} [options]\n*/\nexport function loader (Prism, options) {\n    if (typeof Prism === 'undefined') return\n    if (options?.force !== true && Prism.languages['tsx']) {\n      return\n    }\n\tif (!Prism.languages.jsx) {\n\t\tjsxLoader(Prism)\n\t}\n\n\tif (!Prism.languages.typescript) {\n\t\ttypescriptLoader(Prism)\n\t}\n\tvar typescript = Prism.util.clone(Prism.languages.typescript);\n\tPrism.languages.tsx = Prism.languages.extend('jsx', typescript);\n\n\t// doesn't work with TS because TS is too complex\n\tdelete Prism.languages.tsx['parameter'];\n\tdelete Prism.languages.tsx['literal-property'];\n\n\t// This will prevent collisions between TSX tags and TS generic types.\n\t// Idea by https://github.com/karlhorky\n\t// Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\tvar tag = Prism.languages.tsx.tag;\n\ttag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n\ttag.lookbehind = true;\n}", "// A custom Prism highlight implementation specific for adding line numbers for the editor by\n// modifying the tokenizer.\n\nimport { Prism as PrismJS, Token } from \"prism-esm\";\n\n// HTML\n// import { loader as markdownLoader } from \"prism-esm/components/prism-markdown.js\"\nimport { loader as markupLoader } from \"prism-esm/components/prism-markup.js\";\nimport { loader as markupTemplatingLoader } from \"prism-esm/components/prism-markup-templating.js\";\n\n// CSS\nimport { loader as cssLoader } from \"prism-esm/components/prism-css.js\";\nimport { loader as cssExtrasLoader } from \"prism-esm/components/prism-css-extras.js\";\n\n// JS\nimport { loader as javascriptLoader } from \"prism-esm/components/prism-javascript.js\";\nimport { loader as javascriptExtrasLoader } from \"prism-esm/components/prism-js-extras.js\";\nimport { loader as javascriptTemplatesLoader } from \"prism-esm/components/prism-js-templates.js\";\n\n// JSX\nimport { loader as jsxLoader } from \"prism-esm/components/prism-jsx.js\";\n\n// TS\nimport { loader as tsLoader } from \"prism-esm/components/prism-typescript.js\";\n\n// TSX\nimport { loader as tsxLoader } from \"prism-esm/components/prism-tsx.js\";\n\n/**\n * @typedef {{ code: string, grammar: import(\"prism-esm\").Grammar, language: string } & { tokens: Array<string | Token>}} Env\n * @typedef {import(\"prism-esm\").HookCallback} HookCallback\n */\n\n/**\n * Custom hooks to run with our custom tokenizer.\n * @typedef {Object} Hooks\n * @property {Hook[]} [beforeTokenize]\n * @property {Hook[]} [afterTokenize]\n */\n\n/**\n * Custom hooks to run with our custom tokenizer.\n * @typedef {(env: Env) => void} Hook\n */\n\nexport function createPrismInstance() {\n  const prism = new PrismJS();\n  markupLoader(prism);\n  markupTemplatingLoader(prism);\n  cssLoader(prism);\n  cssExtrasLoader(prism);\n  javascriptLoader(prism);\n  javascriptExtrasLoader(prism);\n  javascriptTemplatesLoader(prism);\n  jsxLoader(prism);\n  tsLoader(prism);\n  tsxLoader(prism);\n  // markdownLoader(prism)\n  return prism;\n}\n\nclass PrismSingleton {\n  static get instance() {\n    if (!this.__singleton__) {\n      this.__singleton__ = createPrismInstance();\n    }\n\n    return this.__singleton__;\n  }\n}\n\n/**\n * @see https://github.com/PrismJS/prism/blob/59e5a3471377057de1f401ba38337aca27b80e03/prism.js#L660\n * A forked function from PrismJS to make wrap the tokenizer with custom functionality.\n * @param {string} text - The code to highlight\n * @param {import(\"prism-esm\").Grammar} grammar - The grammar to use\n * @param {string} language - The language to detect\n * @param {typeof PrismSingleton[\"instance\"]} highlighter\n * @param {Hooks} hooks\n */\nexport function PrismHighlight(\n  text,\n  grammar,\n  language,\n  highlighter,\n  hooks = {},\n) {\n  const env = PrismEnv(text, grammar, language, highlighter, hooks);\n  return Token.stringify(\n    highlighter.util.encode(/** @type {Array<Token>} */ (env.tokens)),\n    env.language,\n    highlighter,\n  );\n}\n\n/**\n * @see https://github.com/PrismJS/prism/blob/59e5a3471377057de1f401ba38337aca27b80e03/prism.js#L660\n * A forked function from PrismJS to make wrap the tokenizer with custom functionality.\n * @param {string} text - The code to highlight\n * @param {import(\"prism-esm\").Grammar} grammar - The grammar to use\n * @param {string} language - The language to detect\n * @param {typeof PrismSingleton[\"instance\"]} highlighter\n * @param {Hooks} hooks\n */\nexport function PrismEnv(text, grammar, language, highlighter, hooks = {}) {\n  if (!highlighter) {\n    highlighter = PrismSingleton.instance;\n  }\n\n  if (!grammar) {\n    grammar = highlighter.languages[\"markup\"];\n  }\n\n  /**\n   * @type {Env}\n   */\n  var env = {\n    code: text,\n    grammar: grammar,\n    language: language,\n    tokens: [],\n  };\n\n  highlighter.hooks.run(\"before-tokenize\", env);\n\n  hooks.beforeTokenize?.forEach((hook) => {\n    hook(env);\n  });\n\n  if (!env.grammar) {\n    throw new Error('The language \"' + env.language + '\" has no grammar.');\n  }\n\n  // New tokenizer wrapping every new line\n  env.tokens = /** @type {Array<Token>} */ (\n    highlighter.tokenize(env.code, env.grammar)\n  );\n\n  highlighter.hooks.run(\"after-tokenize\", env);\n\n  /** Make sure these run after the real after-tokenize for line number plugins. */\n  hooks.afterTokenize?.forEach((hook) => {\n    hook(env);\n  });\n\n  return env;\n}\n", "// @ts-check\n/**\n * @template {(...args: any[]) => any} T\n * @param {T} callback\n * @param {number} wait\n */\nexport function debounce(callback, wait = 0) {\n  /**\n   * @type {number | null}\n   */\n  let timeoutId = null;\n\n  /**\n   * @param {any[]} args\n   */\n  return (...args) => {\n    if (timeoutId) {\n      window.clearTimeout(timeoutId);\n    }\n\n    timeoutId = window.setTimeout(() => {\n      callback.apply(null, args);\n    }, wait);\n  };\n}\n", "/**\n * @param {Element[]} elements\n */\nexport function elementsToString(...elements) {\n  const strings = [];\n\n  const scratch = document.createElement(\"div\");\n\n  for (const el of elements) {\n    if (el instanceof HTMLTemplateElement) {\n      const node = el.content.cloneNode(true);\n\n      scratch.append(node);\n      strings.push(scratch.innerHTML);\n      scratch.innerHTML = \"\";\n      continue;\n    }\n\n    if (el instanceof HTMLScriptElement) {\n      strings.push(el.textContent);\n      continue;\n    }\n\n    // We don't want this for preview, only for <light-editor>\n    if (el instanceof HTMLTextAreaElement) {\n      strings.push(el.value);\n      continue;\n    }\n\n    strings.push(el.innerHTML);\n  }\n\n  return strings.join(\"\\n\");\n}\n", "/**\n * This may be wrong, but we assume a `\\t` is equivalent to 2 spaces.\n */\nconst TAB_LENGTH = 2;\n\nconst INDENT_REGEXP = new RegExp(`(\\t| {${TAB_LENGTH}})`);\n\n/**\n * @param {TemplateStringsArray|string} templateStrings\n * @param {any[]} values\n * @returns {string}\n */\nexport function dedent(templateStrings, ...values) {\n  let matches = [];\n  let strings =\n    typeof templateStrings === \"string\"\n      ? [templateStrings]\n      : templateStrings.slice();\n\n  let string = \"\";\n\n  function interpolate() {\n    string = strings[0];\n\n    for (let i = 0; i < values.length; i++) {\n      string += values[i] + strings[i + 1];\n    }\n\n    string = string.trim();\n  }\n\n  // 1. check if its dedentable.\n  let isDedentable = true;\n\n  // 2. Find all line breaks to determine the highest common indentation level.\n  for (let i = 0; i < strings.length; i++) {\n    let match;\n\n    // If any new line starts without any indentation and not an empty string, mark it as not dedentable, and then break the loop.\n    if (strings[i].trim() && strings[i].match(/\\n[^\\t ]/)) {\n      isDedentable = false;\n      break;\n    }\n\n    if (\n      (match = strings[i].match(new RegExp(`\\n${INDENT_REGEXP.source}+`, \"g\")))\n    ) {\n      matches.push(...match);\n    }\n  }\n\n  if (!isDedentable) {\n    interpolate();\n    return string;\n  }\n\n  // 3. Remove the common indentation from all strings.\n  if (matches.length) {\n    let size = Math.min(...matches.map((value) => value.length - 1));\n    let pattern = new RegExp(`\\n(\\t| ){${size}}`, \"g\");\n\n    for (let i = 0; i < strings.length; i++) {\n      strings[i] = strings[i].replaceAll(pattern, \"\\n\");\n    }\n  }\n\n  // 5. Perform interpolation.\n  interpolate();\n\n  return string;\n}\n\n", "// @ts-check\nimport { Token } from \"prism-esm\";\n\nconst newLineRegex = /\\r\\n|\\r|\\n/;\n\n/**\n * Options for the LineNumberPlugin. Currently nothing.\n * @typedef {object} Options\n * @property {boolean} [disableLineNumbers] - Toggle line numbers off.\n * @property {number} [lineNumberStart=1] - Where to start counting from. Default is 1.\n * @property {(ary: Array<string | Token>, index: number, tokens: Array<Token>) => void} [callback] - substitute your own callback for each line.\n */\n\n/**\n * @param {Options} [options={}]\n * @return {import('./prism-highlight.js').Hook}\n */\nexport function LineNumberPlugin(options = {}) {\n  const disableLineNumbers = options.disableLineNumbers ?? false;\n  const lineNumberStart = options.lineNumberStart ?? 1;\n\n  let callback = options.callback;\n\n  if (typeof callback !== \"function\") {\n    callback = (ary, index, tokens) => {\n      if (ary.length <= 0) {\n        return;\n      }\n\n      if (!options.disableLineNumbers) {\n        tokens.push(\n          new Token(\"light-gutter-cell\", (index + lineNumberStart).toString()),\n        );\n      }\n\n      tokens.push(new Token(\"light-line\", ary));\n    };\n  }\n\n  /**\n   * @type {import('./prism-highlight.js').Hook}\n   */\n  return function lineNumberPlugin(env) {\n    /**\n     * @type {Token[]}\n     */\n    const tokens = [];\n    splitLinesRec(env.tokens).forEach((ary, index) => {\n      callback(ary, index, tokens);\n    });\n\n    env.tokens = tokens;\n  };\n}\n\n/**\n * @param {Array<Token | string> | Token | string} content\n * @return {Array<Token | string>}\n */\nfunction wrapContent(content) {\n  return Array.isArray(content) ? content : [content];\n}\n\n/**\n * @param {Array<Token | string>} content\n * @return {Array<Token | string> | string}\n */\nfunction unwrapContent(content) {\n  if (content.length === 0) {\n    return \"\";\n  } else if (content.length === 1 && typeof content[0] === \"string\") {\n    return content[0];\n  }\n\n  return content;\n}\n\n/**\n * @param {Array<Token | string>} tokens\n * @return {Array<Array<Token | string>>}\n */\nfunction splitLinesRec(tokens) {\n  /** @type {Array<Token | string>} */\n  let currentLine = [];\n  /** @type {Array<Array<Token | string>>} */\n  const lines = [currentLine];\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (typeof token === \"string\") {\n      const split = token.split(newLineRegex);\n      for (let j = 0; j < split.length; j++) {\n        if (j > 0) {\n          lines.push((currentLine = []));\n        }\n\n        const token1 = split[j];\n        if (token1) {\n          currentLine.push(token1);\n        }\n      }\n    } else {\n      // @ts-expect-error\n      const split = splitLinesRec(wrapContent(token.content));\n\n      if (split.length > 1) {\n        for (let j = 0; j < split.length; j++) {\n          if (j > 0) {\n            lines.push((currentLine = []));\n          }\n\n          const line = split[j];\n          if (line.length) {\n            const token1 = new Token(\n              token.type,\n              unwrapContent(line),\n              token.alias,\n            );\n            token1.length = line.reduce((l, t) => l + t.length, 0);\n            currentLine.push(token1);\n          }\n        }\n      } else {\n        currentLine.push(token);\n      }\n    }\n  }\n\n  return lines;\n}\n", "/**\n * Used for constructing and manipulating ranges.\n * @example String Construction\n *\t\tnew Range()\n *\t\t\t\t\t.parse(\"{1-4, 6, 7}\")\n *\t\t\t\t\t.includes(4) // => true\n *\n * @example Manual Construction\n *    const range = new Range()\n *      range.ranges.push([0, 5])\n *      range.numbers.add(7)\n *\n */\nexport class NumberRange {\n  constructor() {\n    const reset = () => {\n      /**\n       * @type {Array<Error>}\n       */\n      this.errors = [];\n\n      /**\n       * Ranges is an array of tuples. [0] is min, [1] is max.\n       * @type {Array<[number, number]>}\n       */\n      this.ranges = [];\n\n      /**\n       * Possible single numbers\n       * @type {Set<number>}\n       */\n      this.numbers = new Set();\n    };\n    this.reset = reset;\n\n    this.reset();\n  }\n\n  /**\n   * Checks if the parsed range includes the value.\n   * @param {number} num\n   */\n  includes(num) {\n    if (this.numbers.has(num)) {\n      return true;\n    }\n\n    if (this.ranges.length == 0) {\n      return false;\n    }\n\n    for (const range of this.ranges) {\n      const [min, max] = range;\n\n      if (num >= min && num <= max) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Given a string like this: \"{1-3, 4, 5}\" create a Range. Also accepts an array of numbers or a Set of numbers.\n   * @param {Set<number> | Array<number> | string} str\n   */\n  parse(str) {\n    this.reset();\n\n    if (Array.isArray(str)) {\n      str.forEach((num) => this.numbers.add(num));\n      return this;\n    }\n\n    if (str instanceof Set) {\n      this.numbers = str;\n      return this;\n    }\n\n    if (!str.includes(\"{\")) {\n      this.errors.push(new Error(\"Unable to parse range. No `{` found.\"));\n      return this;\n    }\n\n    if (!str.includes(\"}\")) {\n      this.errors.push(new Error(\"Unable to parse range. No `}` found.\"));\n      return this;\n    }\n\n    str = str.split(/{/)[1];\n\n    if (!str) {\n      this.errors.push(new Error(\"Invalid string provided for range.\"));\n      return this;\n    }\n\n    str = str.split(/}/)[0];\n\n    str.split(/,\\s*/).forEach((val) => {\n      // Turn them all into tuples.\n      const [minStr, maxStr] = val.split(/-/);\n\n      const min = Number(minStr);\n      const max = Number(maxStr);\n\n      if (min == null || isNaN(min)) return;\n\n      // We were only given a line number.\n      if (max == null || isNaN(max)) {\n        this.numbers.add(min);\n        return;\n      }\n\n      this.ranges.push([min, max]);\n    });\n\n    return this;\n  }\n}\n", "/**\n * @typedef {object} lineHighlightOptions\n * @property {import(\"./number-range.js\").NumberRange} highlightLinesRange\n * @property {import(\"./number-range.js\").NumberRange} insertedLinesRange\n * @property {import(\"./number-range.js\").NumberRange} deletedLinesRange\n */\n\n/**\n * @param {lineHighlightOptions} options\n */\nexport function LineHighlightPlugin(options) {\n  const { highlightLinesRange, insertedLinesRange, deletedLinesRange } =\n    options;\n  /**\n   * @param {import(\"./prism-highlight.js\").Env} env\n   */\n  return function (env) {\n    // -1 for 0-index.\n    let index = 1;\n    for (const token of env.tokens) {\n      if (typeof token === \"string\") continue;\n\n      if (highlightLinesRange.includes(index)) {\n        // line-highlight is what prism themes expect.\n        token.type += \" line-highlight\";\n      }\n\n      if (insertedLinesRange.includes(index)) {\n        token.type += \" inserted\";\n      }\n\n      if (deletedLinesRange.includes(index)) {\n        token.type += \" deleted\";\n      }\n\n      // Tokens can only ever be \"light-line\" or \"light-gutter-cell\" so we just increment on \"light-line\"\n      if (token.type.includes(\"light-line\")) {\n        index++;\n      }\n    }\n  };\n}\n\n/**\n * @typedef {object} WrapEnv\n * @property {string} type\n * @property {string} content\n * @property {Array<string>} classes\n * @property {Record<string, string>} attributes\n * @property {string} language\n */\n\n/**\n * @example\n *   prism.hooks.add(\"wrap\", LineHighlightWrapPlugin)\n */\nexport function LineHighlightWrapPlugin() {\n  const partTypes = [\"inserted\", \"line-highlight\", \"deleted\"];\n\n  /**\n   * @param {{ type: string, attributes: Record<string, string> }} token\n   * @param {string} tokenName - Name of token to find\n   * @param {string} partName - Name of part to add\n   */\n  function addParts(token, tokenName, partName) {\n    if (token.type.includes(tokenName)) {\n      token.attributes[\"part\"] = partName;\n\n      partTypes.forEach((type) => {\n        if (!token.type.includes(type)) return;\n        if (type === \"line-highlight\") type = \"highlight\";\n\n        token.attributes[\"part\"] += ` ${partName}-${type}`;\n      });\n    }\n  }\n  /**\n   * @param {WrapEnv} env\n   */\n  return function (env) {\n    addParts(env, \"light-line\", \"line\");\n    addParts(env, \"light-gutter-cell\", \"gutter-cell\");\n    addParts(env, \"light-marker\", \"marker\");\n  };\n}\n", "// @ts-check\nimport { css, html } from \"lit\";\nimport { when } from \"lit/directives/when.js\";\nimport { unsafeHTML } from \"lit/directives/unsafe-html.js\";\n\nimport { baseStyles } from \"../../styles/base-styles.js\";\nimport { theme } from \"../../styles/default-theme.styles.js\";\nimport { codeStyles } from \"../../styles/code-styles.js\";\n\nimport {\n  PrismHighlight,\n  createPrismInstance,\n} from \"../../../internal/prism-highlight.js\";\nimport { debounce } from \"../../../internal/debounce.js\";\nimport { BaseElement } from \"../../../internal/base-element.js\";\nimport { elementsToString } from \"../../../internal/elements-to-strings.js\";\nimport { dedent } from \"../../../internal/dedent.js\";\nimport { LineNumberPlugin } from \"../../../internal/line-number-plugin.js\";\nimport { NumberRange } from \"../../../internal/number-range.js\";\nimport {\n  LineHighlightPlugin,\n  LineHighlightWrapPlugin,\n} from \"../../../internal/line-highlight-plugin.js\";\n\n/**\n * LightCode is a minimal wrapper around Prism for displaying code highlighting\n *\n * @customElement\n * @tagname light-code\n *\n * @csspart base - The base wrapping element\n * @csspart pre - The <pre> element wrapping the source code\n * @csspart code - The <code>  element wrapping the source code\n * @csspart gutter - The gutter for line numbers. This is only for the overlay for when the lines dont correspond to size of the code.\n * @csspart gutter-cell - The element that holds line numbers.\n\n * @slot default - The code to use for highlighting\n */\nexport default class LightCode extends BaseElement {\n  /**\n   * @override\n   */\n  static baseName = \"light-code\";\n\n  /**\n   * @override\n   */\n  static styles = [\n    baseStyles,\n    codeStyles,\n    theme,\n    css`\n      :host {\n        display: grid;\n      }\n      [part~=\"base\"] {\n        height: 100%;\n        position: relative;\n        z-index: 0;\n        background: hsl(230, 1%, 98%);\n        color: hsl(230, 8%, 24%);\n        display: grid;\n      }\n\n      [part~=\"pre\"] {\n        height: 100%;\n        display: grid;\n        place-items: start;\n      }\n\n      [part~=\"code\"] {\n        width: 100%;\n        height: 100%;\n        place-content: start;\n        overflow: auto;\n      }\n\n      [part~=\"gutter\"] {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: calc(var(--gutter-cell-width, 40px));\n        border-inline-end: var(--syntax-gutter-border);\n        height: calc(100% - var(--scrollbar-height, 0px));\n        max-height: 100%;\n        overflow: hidden;\n        pointer-events: none;\n        z-index: 2;\n      }\n    `,\n  ];\n\n  /**\n   * @override\n   */\n  static properties = {\n    disableHighlight: { type: Boolean, attribute: \"disable-highlight\" },\n    preserveWhitespace: { type: Boolean, attribute: \"preserve-whitespace\" },\n    highlightLines: { attribute: \"highlight-lines\" },\n    insertedLines: { attribute: \"inserted-lines\" },\n    deletedLines: { attribute: \"deleted-lines\" },\n    disableLineNumbers: {\n      type: Boolean,\n      reflect: true,\n      attribute: \"disable-line-numbers\",\n    },\n    lineNumberStart: { type: Number, attribute: \"line-number-start\" },\n    wrap: { reflect: true, attribute: \"wrap\" },\n    language: {},\n    code: {},\n    highlighter: { attribute: false, state: true },\n    __highlightedCode__: { attribute: false, state: true },\n  };\n\n  constructor() {\n    super();\n\n    /**\n     * The language to highlight for.\n     * @type {string}\n     */\n    this.language = \"html\";\n\n    /**\n     * If disabled, its on you to provide `<pre><code></code></pre>`\n     * @type {boolean}\n     */\n    this.disableHighlight = false;\n\n    /**\n     * We will take the code, wrap it in `<pre><code></code></pre>` and run it through\n     * PrismJS.\n     * If the element has `disableHighlight`, we will not touch their code. Instead they must pass in escapedHTML.\n     * @type {string}\n     */\n    this.code = \"\";\n\n    /**\n     * @internal\n     * @type {MutationObserverInit}\n     */\n    this.__mutationObserverConfig = {\n      childList: true,\n      subtree: true,\n      characterData: true,\n    };\n\n    /**\n     * @internal\n     * @type {() => void}\n     */\n    this.codeDebounce = debounce(() => this.handleMutation(\"code\"), 20);\n\n    /**\n     * @property\n     * @type {\"soft\" | \"hard\"}\n     * If `wrap=\"soft\"`, lines will wrap when they reach the edge of their container. If `wrap=\"hard\"`, lines will not wrap instead all the user to scroll horizontally to see more code.\n     */\n    this.wrap = \"hard\";\n\n    /**\n     * @property\n     * @type {Boolean}\n     * Whether or not to preserve white spaces from templates and attempt to dedent and chomp new lines.\n     */\n    this.preserveWhitespace = false;\n\n    /**\n     * @type {string} - A string of possible lines to highlight. Example: \"{1-9, 16, 18}\"\n     */\n    this.highlightLines = \"\";\n\n    /**\n     * @type {string} - A string of lines that are inserted for diffs. Example: \"{1-9, 16, 18}\"\n     */\n    this.insertedLines = \"\";\n\n    /**\n     * @type {string} - A string of lines that are deleted for diffs. Example: \"{1-9, 16, 18}\"\n     */\n    this.deletedLines = \"\";\n\n    /**\n     * @type {boolean} whether or not to disable line numbers\n     */\n    this.disableLineNumbers = false;\n\n    /**\n     * Where to start counting from indexes. Note, this is only for display purposes in the gutter.\n     * @type {number}\n     */\n    this.lineNumberStart = 1;\n\n    /**\n     * Highlighter to use for highlighting code. Default is Prism.\n     */\n    this.highlighter = createPrismInstance();\n\n    this.__resizeObserver = new ResizeObserver(() =>\n      this.__setGutterMeasurements(),\n    );\n\n    this.newLineRegex = /\\r\\n|\\r|\\n/;\n    this.__highlightedCode__ = \"\";\n  }\n\n  /**\n   * @override\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.__resizeObserver.observe(this);\n  }\n\n  /**\n   * @override\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__resizeObserver.unobserve(this);\n  }\n\n  /**\n   * @override\n   * @param {import(\"lit\").PropertyValues<this>} changedProperties\n   */\n  willUpdate(changedProperties) {\n    if (\n      changedProperties.has(\"highlighter\") ||\n      changedProperties.has(\"language\") ||\n      changedProperties.has(\"code\")\n      // We purposely don't re-highlight on line number changes for performance reasons.\n    ) {\n      this.__highlightedCode__ = this.highlight(this.code);\n    }\n\n    super.willUpdate(changedProperties);\n  }\n\n  /**\n   * @override\n   * @param {import(\"lit\").PropertyValues<this>} changedProperties\n   */\n  updated(changedProperties) {\n    if (\n      (changedProperties.has(\"insertedLines\") ||\n        changedProperties.has(\"deletedLines\") ||\n        changedProperties.has(\"highlightLines\")) &&\n      !changedProperties.has(\"code\")\n    ) {\n      const lines = this.shadowRoot?.querySelectorAll(\n        \".light-gutter-cell, .light-line\",\n      );\n\n      if (lines?.length) {\n        const highlightLinesRange = new NumberRange().parse(\n          this.highlightLines,\n        );\n        const insertedLinesRange = new NumberRange().parse(this.insertedLines);\n        const deletedLinesRange = new NumberRange().parse(this.deletedLines);\n\n        lines.forEach((el, index) => {\n          // We have twice as many lines as line numbers.\n          const divisor = index % 2 === 0 ? index : index - 1;\n          const lineNumber = divisor / 2 + 1;\n\n          el.classList.toggle(\n            \"line-highlight\",\n            highlightLinesRange.includes(lineNumber),\n          );\n          el.part.toggle(\n            \"line-highlight\",\n            highlightLinesRange.includes(lineNumber),\n          );\n\n          el.classList.toggle(\n            \"inserted\",\n            insertedLinesRange.includes(lineNumber),\n          );\n          el.part.toggle(\"inserted\", insertedLinesRange.includes(lineNumber));\n\n          el.classList.toggle(\n            \"deleted\",\n            deletedLinesRange.includes(lineNumber),\n          );\n          el.part.toggle(\"deleted\", deletedLinesRange.includes(lineNumber));\n        });\n      }\n    }\n\n    super.updated(changedProperties);\n  }\n\n  /**\n   * @internal\n   * @param {\"preview-code\" | \"code\"} variable\n   */\n  handleMutation(variable) {\n    if (variable === \"code\") {\n      this.handleTemplate({ target: this.findSlot(\"code\") });\n      return;\n    }\n  }\n\n  /**\n   * @internal\n   * @param {string} name\n   * @returns {HTMLSlotElement | null | undefined}\n   */\n  findSlot(name) {\n    return this.shadowRoot?.querySelector(`slot[name='${name}']`);\n  }\n\n  /**\n   * @internal\n   * @param {Event | { target?: undefined | null | HTMLSlotElement }} e\n   */\n  handleTemplate(e) {\n    /**\n     * @type {HTMLSlotElement | null | undefined}\n     */\n    // @ts-expect-error\n    const slot = e.target;\n\n    if (slot == null) return;\n\n    const name = slot.getAttribute(\"name\");\n\n    if ([\"preview-code\", \"code\"].includes(name || \"\") === false) return;\n\n    let elements = slot.assignedElements({ flatten: true });\n\n    let code = this.unescapeTags(elementsToString(...elements));\n\n    if (!this.preserveWhitespace) {\n      code = dedent(code.trim());\n    }\n\n    if (name === \"code\") {\n      this.code = code;\n      return;\n    }\n  }\n\n  /**\n   * Only used to unescape things like `&lt;/script>` from slotted content.\n   * @internal\n   * @param {string} text\n   */\n  unescapeTags(text) {\n    // Replace usages of `&lt;/script>` with `</script>`. Match against\n    // `&lt;/` so that other usages of &lt; aren't replaced.\n    return text.replaceAll(/&lt;\\/([\\w\\d\\.-_]+)>/g, \"</$1>\");\n  }\n\n  /**\n   * @public\n   * Override this function to use your own highlight function\n   */\n  highlight(code = this.code) {\n    // const newLineRegex = /\\r\\n|\\r|\\n/\n    // const CELL_START = `<span class=\"token light-gutter-cell\" part=\"gutter-cell\">`\n    // const LINE_START = `</span><span class=\"token light-line\" part=\"line\">`\n    // const LINE_END = `</span>`\n\n    // const ESCAPE_STRING_HASH = {\n    //   \"&\": \"&amp;\",\n    //   \"<\": \"&lt;\",\n    //   \">\": \"&gt;\",\n    //   '\"': \"&quot;\",\n    //   \"'\": \"&#x27;\"\n    // }\n\n    // const escapeString = (str) => {\n    //   return str\n    //     .replaceAll(/&/g, \"&amp;\")\n    //     .replaceAll(/[<>\"']/g, (match) => ESCAPE_STRING_HASH[match])\n    // }\n\n    // code = code.split(newLineRegex).map((line, index) => {\n    //   return CELL_START + (index + 1) + LINE_START + escapeString(line) + LINE_END\n    // }).join(\"\\n\")\n\n    code = code\n      .split(this.newLineRegex)\n      .map((str) => {\n        if (str === \"\") {\n          return \" \";\n        }\n\n        return str;\n      })\n      .join(\"\\n\");\n\n    if (!this.highlighter) {\n      this.highlighter = createPrismInstance();\n    }\n    const afterTokenizePlugins = [\n      LineNumberPlugin({\n        lineNumberStart: this.lineNumberStart,\n        disableLineNumbers: this.disableLineNumbers,\n      }),\n      LineHighlightPlugin({\n        insertedLinesRange: new NumberRange().parse(this.insertedLines),\n        deletedLinesRange: new NumberRange().parse(this.deletedLines),\n        highlightLinesRange: new NumberRange().parse(this.highlightLines),\n      }),\n    ];\n\n    this.highlighter.hooks.add(\n      \"wrap\",\n      /** @type {any} */ (LineHighlightWrapPlugin()),\n    );\n\n    code = PrismHighlight(\n      code,\n      this.highlighter.languages[this.language],\n      this.language,\n      this.highlighter,\n      {\n        afterTokenize: afterTokenizePlugins,\n      },\n    );\n\n    return code;\n  }\n\n  /**\n   * @internal\n   */\n  __setGutterMeasurements() {\n    const gutterWidth = /** @type {null | undefined | HTMLElement} */ (\n      this.shadowRoot?.querySelector(\"[part~='gutter-cell']\")\n    )?.offsetWidth;\n\n    if (gutterWidth) {\n      this.style.setProperty(\"--gutter-cell-width\", `${gutterWidth}px`);\n    }\n\n    const codeEl = this.shadowRoot?.querySelector(\"[part~='code']\");\n\n    if (codeEl) {\n      const { offsetHeight, clientHeight } = /** @type {HTMLElement} */ (\n        codeEl\n      );\n      const scrollbarHeight = offsetHeight - clientHeight;\n      this.style.setProperty(\"--scrollbar-height\", `${scrollbarHeight}px`);\n    }\n  }\n\n  /**\n   * @override\n   */\n  render() {\n    const language = this.language;\n\n    const finalHTML = html`\n      <div part=\"base\">\n        ${when(\n          !this.disableHighlight,\n          () =>\n            html` <pre\n              id=\"pre-${language}\"\n              data-code-lang=${language}\n              aria-hidden=\"true\"\n              part=\"pre pre-${language}\"\n              class=\"diff-highlight language-${language}\"\n            ><code\n                tabindex=\"0\"\n                aria-labelledby=\"source-code-label\"\n                role=\"region\"\n                part=\"code code-${language}\"\n                class=\"language-${language}\"\n                .innerHTML=${this.__highlightedCode__}\n              ></code></pre>`,\n          () => html`${unsafeHTML(this.code)}`,\n        )}\n        <!-- This gutter is for showing when line numbers may not correspond to existing lines. -->\n        ${when(\n          this.disableLineNumbers,\n          () => html``,\n          () => html`<div part=\"gutter\"></div>`,\n        )}\n      </div>\n\n      <div hidden>\n        <slot name=\"code\" @slotchange=${this.handleTemplate}></slot>\n      </div>\n    `;\n\n    setTimeout(async () => {\n      await this.updateComplete;\n      setTimeout(() => this.__setGutterMeasurements());\n    });\n\n    return finalHTML;\n  }\n}\n"],
  "mappings": "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",
  "names": ["when", "condition", "trueCase", "falseCase", "PartType", "ATTRIBUTE", "CHILD", "PROPERTY", "BOOLEAN_ATTRIBUTE", "EVENT", "ELEMENT", "directive", "c", "values", "_$litDirective$", "Directive", "_partInfo", "_$isConnected", "this", "_$parent", "part", "parent", "attributeIndex", "__part", "__attributeIndex", "props", "update", "_part", "render", "UnsafeHTMLDirective", "Directive", "partInfo", "super", "this", "_value", "nothing", "type", "PartType", "CHILD", "Error", "constructor", "directiveName", "value", "_templateResult", "noChange", "strings", "raw", "_$litType$", "resultType", "values", "unsafeHTML", "directive", "lang", "o", "i", "e", "Prism", "lang", "loader", "Prism", "loader", "Prism", "loader", "Prism", "Prism", "i", "Prism", "loader", "loader", "Prism", "i", "t", "loader", "Prism", "loader", "Prism", "i", "loader", "Prism", "i", "loader", "Prism", "i", "loader", "Prism", "loader", "Prism", "Prism", "loader", "i", "i", "t", "e"]
}
